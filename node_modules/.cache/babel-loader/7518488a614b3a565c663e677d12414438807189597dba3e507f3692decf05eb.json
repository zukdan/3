{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zulda\\\\Desktop\\\\3\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useCallback } from 'react';\nimport Board from './components/Board';\nimport styled from 'styled-components';\nimport { handleAddList, handleDeleteList, handleListTitleChange } from './utils/listHandlers';\nimport { handleAddCard, handleDeleteCard, handleCardTextChange, handleCardDescriptionChange } from './utils/cardHandlers';\nimport { handleDownloadBoard, handleLoadBoard, handleDeleteBoard } from './utils/dataHandlers';\nimport { AppContainer, FileInput, ButtonContainer, LoadButton, CommonButton, BoardScrollContainer } from './App.styles'; // Import styles\nimport LabelManager from './components/LabelManager';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopSectionContainer = styled.div`\n  /* Стили для контейнера верхней секции */\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start; /* Выравнивание по левому краю */\n  margin-bottom: 20px; /* Отступ снизу */\n`;\n_c = TopSectionContainer;\nfunction App() {\n  _s();\n  const [data, setData] = useState({\n    lists: [{\n      id: '1',\n      title: '1 семестр',\n      cards: [{\n        id: '1',\n        text: '1 предмет',\n        description: 'Описание'\n      }]\n    }, {\n      id: '2',\n      title: '2 семестр',\n      cards: [{\n        id: '2',\n        text: '1 предмет',\n        description: 'Описание '\n      }]\n    }, {\n      id: '3',\n      title: '3 семестр',\n      cards: [{\n        id: '3',\n        text: '1 предмет',\n        description: 'Описание '\n      }]\n    }, {\n      id: '4',\n      title: '4 семестр',\n      cards: [{\n        id: '4',\n        text: '1 предмет',\n        description: 'Описание'\n      }]\n    }, {\n      id: '5',\n      title: '5 семестр',\n      cards: [{\n        id: '5',\n        text: '1 предмет',\n        description: 'Описание'\n      }]\n    }, {\n      id: '6',\n      title: '6 семестр',\n      cards: [{\n        id: '6',\n        text: '1 предмет',\n        description: 'Описание'\n      }]\n    }, {\n      id: '7',\n      title: '7 семестр',\n      cards: [{\n        id: '7',\n        text: '1 предмет',\n        description: 'Описание'\n      }]\n    }, {\n      id: '8',\n      title: '8 семестр',\n      cards: [{\n        id: '8',\n        text: '1 предмет',\n        description: 'Описание'\n      }]\n    }],\n    labels: []\n  });\n  const [selectedCard, setSelectedCard] = useState(null);\n  const handleAddListClick = useCallback(() => {\n    handleAddList(data, setData);\n  }, [data, setData]);\n  const handleDeleteListClick = useCallback(listId => {\n    handleDeleteList(listId, data, setData);\n  }, [data, setData]);\n  const handleListTitleChangeClick = useCallback((listId, newTitle) => {\n    handleListTitleChange(listId, newTitle, data, setData);\n  }, [data, setData]);\n  const handleAddCardClick = useCallback(listId => {\n    handleAddCard(listId, data, setData);\n  }, [data, setData]);\n  const handleDeleteCardClick = useCallback((listId, cardId) => {\n    handleDeleteCard(listId, cardId, data, setData);\n  }, [data, setData]);\n  const handleCardTextChangeClick = useCallback((listId, cardId, newText) => {\n    handleCardTextChange(listId, cardId, newText, data, setData);\n  }, [data, setData]);\n  const handleCardDescriptionChangeClick = useCallback((listId, cardId, newDescription) => {\n    handleCardDescriptionChange(listId, cardId, newDescription, data, setData);\n  }, [data, setData]);\n  const handleDownloadBoardClick = () => {\n    handleDownloadBoard(data);\n  };\n  const handleLoadBoardChange = useCallback(event => {\n    handleLoadBoard(event, setData);\n  }, [setData]);\n  const handleDeleteBoardClick = () => {\n    handleDeleteBoard(setData);\n  };\n  const moveCard = useCallback((draggedCardId, sourceListId, targetCardId, targetListId, direction) => {\n    setData(prevData => {\n      const sourceList = prevData.lists.find(list => list.id === sourceListId);\n      const draggedCard = sourceList.cards.find(card => card.id === draggedCardId);\n      const cardIndex = sourceList.cards.findIndex(card => card.id === draggedCardId);\n      // Remove card from source list\n      const updatedSourceList = {\n        ...sourceList,\n        cards: sourceList.cards.filter(card => card.id !== draggedCardId)\n      };\n      // Find target list\n      const targetList = prevData.lists.find(list => list.id === targetListId);\n      let newIndex;\n      let updatedTargetList;\n      if (direction === \"up\" || direction === \"down\") {\n        // Move within the same list\n        if (targetListId === sourceListId) {\n          //move within the same List\n          newIndex = direction === 'up' ? Math.max(0, cardIndex - 1) : Math.min(sourceList.cards.length - 1, cardIndex + 1);\n          // If the card doesn't move, return previous data\n          if (newIndex === cardIndex) {\n            return prevData;\n          }\n          //This update is not working as expected. There could be an unhandled error.\n          //updatedSourceList = {\n          //    ...sourceList,\n          //    cards: [...sourceList.cards.slice(0, cardIndex), ...sourceList.cards.slice(cardIndex + 1)]\n          //};\n          updatedTargetList = {\n            ...sourceList,\n            cards: [...updatedSourceList.cards.slice(0, newIndex), draggedCard, ...updatedSourceList.cards.slice(newIndex)]\n          };\n        } else {\n          targetCardIndex = targetList.cards.findIndex(card => card.id === targetCardId);\n          updatedTargetList = {\n            ...targetList,\n            cards: [...targetList.cards.slice(0, targetCardIndex), draggedCard, ...targetList.cards.slice(targetCardIndex)]\n          };\n        }\n      } else {\n        updatedTargetList = {\n          ...targetList,\n          cards: [...targetList.cards, draggedCard]\n        };\n      }\n      return {\n        ...prevData,\n        lists: prevData.lists.map(list => {\n          if (list.id === sourceListId) {\n            return updatedTargetList;\n          } else if (list.id === targetListId) {\n            return updatedTargetList;\n          } else {\n            return list;\n          }\n        })\n      };\n    });\n  }, [setData]);\n  const moveCardTop = useCallback((draggedCardId, sourceListId) => {\n    setData(prevData => {\n      const sourceList = prevData.lists.find(list => list.id === sourceListId);\n      const draggedCard = sourceList.cards.find(card => card.id === draggedCardId);\n      const cardIndex = sourceList.cards.findIndex(card => card.id === draggedCardId);\n      if (cardIndex <= 0) {\n        return prevData;\n      }\n      const updatedSourceList = {\n        ...sourceList,\n        cards: [...sourceList.cards.slice(0, cardIndex), ...sourceList.cards.slice(cardIndex + 1)]\n      };\n      const newIndex = 0;\n      const updatedTargetList = {\n        ...sourceList,\n        cards: [...sourceList.cards.slice(0, newIndex), draggedCard, ...sourceList.cards.slice(newIndex)]\n      };\n      return {\n        ...prevData,\n        lists: prevData.lists.map(list => {\n          if (list.id === sourceListId) {\n            return updatedTargetList;\n          } else {\n            return list;\n          }\n        })\n      };\n    });\n  }, [setData]);\n  const moveCardBottom = useCallback((draggedCardId, sourceListId) => {\n    setData(prevData => {\n      const sourceList = prevData.lists.find(list => list.id === sourceListId);\n      const draggedCard = sourceList.cards.find(card => card.id === draggedCardId);\n      const cardIndex = sourceList.cards.findIndex(card => card.id === draggedCardId);\n      if (cardIndex == sourceList.cards.length - 1) {\n        return prevData;\n      }\n      const updatedSourceList = {\n        ...sourceList,\n        cards: [...sourceList.cards.slice(0, cardIndex), ...sourceList.cards.slice(cardIndex + 1)]\n      };\n      const newIndex = sourceList.cards.length - 1;\n      const updatedTargetList = {\n        ...sourceList,\n        cards: [...sourceList.cards.slice(0, newIndex), draggedCard, ...sourceList.cards.slice(newIndex)]\n      };\n      return {\n        ...prevData,\n        lists: prevData.lists.map(list => {\n          if (list.id === sourceListId) {\n            return updatedTargetList;\n          } else {\n            return list;\n          }\n        })\n      };\n    });\n  }, [setData]);\n  const handleUnassignLabel = useCallback((listId, cardId, labelId) => {\n    setData(prevData => {\n      const updatedLists = prevData.lists.map(list => ({\n        ...list,\n        cards: list.cards.map(card => {\n          if (card.id === cardId) {\n            const newLabels = card.labels ? card.labels.filter(id => id !== labelId) : [];\n            return {\n              ...card,\n              labels: newLabels\n            };\n          }\n          return card;\n        })\n      }));\n      return {\n        ...prevData,\n        lists: updatedLists\n      };\n    });\n  }, [setData]);\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: [/*#__PURE__*/_jsxDEV(TopSectionContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ButtonContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddListClick,\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0441\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CommonButton, {\n          onClick: handleDownloadBoardClick,\n          children: \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C \\u043A\\u0443\\u0440\\u0441\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LoadButton, {\n          htmlFor: \"fileInput\",\n          children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u043A\\u0443\\u0440\\u0441\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FileInput, {\n          type: \"file\",\n          id: \"fileInput\",\n          accept: \".json\",\n          onChange: handleLoadBoardChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CommonButton, {\n          onClick: handleDeleteBoardClick,\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u043A\\u0443\\u0440\\u0441\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LabelManager, {\n        data: data,\n        setData: setData,\n        selectedCard: selectedCard,\n        setSelectedCard: setSelectedCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BoardScrollContainer, {\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        data: data,\n        setData: setData,\n        onCardTextChange: handleCardTextChangeClick,\n        onCardDescriptionChange: handleCardDescriptionChangeClick,\n        onAddCard: handleAddCardClick,\n        onListTitleChange: handleListTitleChangeClick,\n        onDeleteList: handleDeleteListClick,\n        onDeleteCard: handleDeleteCardClick,\n        setSelectedCard: setSelectedCard,\n        moveCard: moveCard // Pass moveCard to Board\n        ,\n        moveCardTop: moveCardTop,\n        moveCardBottom: moveCardBottom,\n        onUnassignLabel: handleUnassignLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QBRVMAk0WlA8CzVF5C8kdAOdKNQ=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"TopSectionContainer\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useCallback","Board","styled","handleAddList","handleDeleteList","handleListTitleChange","handleAddCard","handleDeleteCard","handleCardTextChange","handleCardDescriptionChange","handleDownloadBoard","handleLoadBoard","handleDeleteBoard","AppContainer","FileInput","ButtonContainer","LoadButton","CommonButton","BoardScrollContainer","LabelManager","jsxDEV","_jsxDEV","TopSectionContainer","div","_c","App","_s","data","setData","lists","id","title","cards","text","description","labels","selectedCard","setSelectedCard","handleAddListClick","handleDeleteListClick","listId","handleListTitleChangeClick","newTitle","handleAddCardClick","handleDeleteCardClick","cardId","handleCardTextChangeClick","newText","handleCardDescriptionChangeClick","newDescription","handleDownloadBoardClick","handleLoadBoardChange","event","handleDeleteBoardClick","moveCard","draggedCardId","sourceListId","targetCardId","targetListId","direction","prevData","sourceList","find","list","draggedCard","card","cardIndex","findIndex","updatedSourceList","filter","targetList","newIndex","updatedTargetList","Math","max","min","length","slice","targetCardIndex","map","moveCardTop","moveCardBottom","handleUnassignLabel","labelId","updatedLists","newLabels","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","accept","onChange","onCardTextChange","onCardDescriptionChange","onAddCard","onListTitleChange","onDeleteList","onDeleteCard","onUnassignLabel","_c2","$RefreshReg$"],"sources":["C:/Users/zulda/Desktop/3/src/App.js"],"sourcesContent":["// src/App.js\r\nimport React, { useState, useCallback } from 'react';\r\nimport Board from './components/Board';\r\nimport styled from 'styled-components';\r\nimport { handleAddList, handleDeleteList, handleListTitleChange } from './utils/listHandlers';\r\nimport { handleAddCard, handleDeleteCard, handleCardTextChange, handleCardDescriptionChange } from './utils/cardHandlers';\r\nimport { handleDownloadBoard, handleLoadBoard, handleDeleteBoard } from './utils/dataHandlers';\r\nimport { AppContainer, FileInput, ButtonContainer, LoadButton, CommonButton, BoardScrollContainer } from './App.styles'; // Import styles\r\nimport LabelManager from './components/LabelManager';\r\n\r\nconst TopSectionContainer = styled.div`\r\n  /* Стили для контейнера верхней секции */\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start; /* Выравнивание по левому краю */\r\n  margin-bottom: 20px; /* Отступ снизу */\r\n`;\r\n\r\nfunction App() {\r\n  const [data, setData] = useState({\r\n    lists: [\r\n      { id: '1', title: '1 семестр', cards: [{ id: '1', text: '1 предмет', description: 'Описание' }] },\r\n      { id: '2', title: '2 семестр', cards: [{ id: '2', text: '1 предмет', description: 'Описание ' }] },\r\n      { id: '3', title: '3 семестр', cards: [{ id: '3', text: '1 предмет', description: 'Описание ' },] },\r\n      { id: '4', title: '4 семестр', cards: [{ id: '4', text: '1 предмет', description: 'Описание' },] },\r\n      { id: '5', title: '5 семестр', cards: [{ id: '5', text: '1 предмет', description: 'Описание' },] },\r\n      { id: '6', title: '6 семестр', cards: [{ id: '6', text: '1 предмет', description: 'Описание' },] },\r\n      { id: '7', title: '7 семестр', cards: [{ id: '7', text: '1 предмет', description: 'Описание' },] },\r\n      { id: '8', title: '8 семестр', cards: [{ id: '8', text: '1 предмет', description: 'Описание' },] },\r\n    ],\r\n    labels: [],\r\n  });\r\n\r\n  const [selectedCard, setSelectedCard] = useState(null);\r\n\r\n  const handleAddListClick = useCallback(() => {\r\n    handleAddList(data, setData);\r\n  }, [data, setData]);\r\n\r\n  const handleDeleteListClick = useCallback((listId) => {\r\n    handleDeleteList(listId, data, setData);\r\n  }, [data, setData]);\r\n\r\n  const handleListTitleChangeClick = useCallback((listId, newTitle) => {\r\n    handleListTitleChange(listId, newTitle, data, setData);\r\n  }, [data, setData]);\r\n\r\n  const handleAddCardClick = useCallback((listId) => {\r\n    handleAddCard(listId, data, setData);\r\n  }, [data, setData]);\r\n\r\n  const handleDeleteCardClick = useCallback((listId, cardId) => {\r\n    handleDeleteCard(listId, cardId, data, setData);\r\n  }, [data, setData]);\r\n\r\n  const handleCardTextChangeClick = useCallback((listId, cardId, newText) => {\r\n    handleCardTextChange(listId, cardId, newText, data, setData);\r\n  }, [data, setData]);\r\n\r\n  const handleCardDescriptionChangeClick = useCallback((listId, cardId, newDescription) => {\r\n    handleCardDescriptionChange(listId, cardId, newDescription, data, setData);\r\n  }, [data, setData]);\r\n\r\n  const handleDownloadBoardClick = () => {\r\n    handleDownloadBoard(data);\r\n  };\r\n\r\n  const handleLoadBoardChange = useCallback((event) => {\r\n    handleLoadBoard(event, setData);\r\n  }, [setData]);\r\n\r\n  const handleDeleteBoardClick = () => {\r\n    handleDeleteBoard(setData);\r\n  };\r\n\r\n    const moveCard = useCallback((draggedCardId, sourceListId, targetCardId, targetListId, direction) => {\r\n        setData(prevData => {\r\n            const sourceList = prevData.lists.find(list => list.id === sourceListId);\r\n            const draggedCard = sourceList.cards.find(card => card.id === draggedCardId);\r\n            const cardIndex = sourceList.cards.findIndex(card => card.id === draggedCardId);\r\n            // Remove card from source list\r\n            const updatedSourceList = {\r\n                ...sourceList,\r\n                cards: sourceList.cards.filter(card => card.id !== draggedCardId),\r\n            };\r\n            // Find target list\r\n            const targetList = prevData.lists.find(list => list.id === targetListId);\r\n            let newIndex;\r\n            let updatedTargetList;\r\n            if (direction === \"up\" || direction === \"down\") {\r\n                // Move within the same list\r\n                if (targetListId === sourceListId) { //move within the same List\r\n                    newIndex = (direction === 'up') ? Math.max(0, cardIndex - 1) : Math.min(sourceList.cards.length - 1, cardIndex + 1);\r\n                    // If the card doesn't move, return previous data\r\n                    if (newIndex === cardIndex) {\r\n                        return prevData;\r\n                    }\r\n                    //This update is not working as expected. There could be an unhandled error.\r\n                    //updatedSourceList = {\r\n                    //    ...sourceList,\r\n                    //    cards: [...sourceList.cards.slice(0, cardIndex), ...sourceList.cards.slice(cardIndex + 1)]\r\n                    //};\r\n                    updatedTargetList = {\r\n                        ...sourceList,\r\n                        cards: [\r\n                            ...updatedSourceList.cards.slice(0, newIndex),\r\n                            draggedCard,\r\n                            ...updatedSourceList.cards.slice(newIndex),\r\n                        ],\r\n                    };\r\n                }\r\n                else {\r\n                    targetCardIndex = targetList.cards.findIndex(card => card.id === targetCardId);\r\n                    updatedTargetList = {\r\n                        ...targetList,\r\n                        cards: [\r\n                            ...targetList.cards.slice(0, targetCardIndex),\r\n                            draggedCard,\r\n                            ...targetList.cards.slice(targetCardIndex),\r\n                        ],\r\n                    };\r\n                }\r\n            }\r\n            else {\r\n                updatedTargetList = {\r\n                    ...targetList,\r\n                    cards: [\r\n                        ...targetList.cards,\r\n                        draggedCard,\r\n                    ],\r\n                };\r\n            }\r\n            return {\r\n                ...prevData,\r\n                lists: prevData.lists.map(list => {\r\n                    if (list.id === sourceListId) {\r\n                        return updatedTargetList;\r\n                    } else if (list.id === targetListId) {\r\n                        return updatedTargetList;\r\n                    } else {\r\n                        return list;\r\n                    }\r\n                }),\r\n            };\r\n        });\r\n    }, [setData]);\r\n      const moveCardTop = useCallback((draggedCardId, sourceListId) => {\r\n          setData(prevData => {\r\n              const sourceList = prevData.lists.find(list => list.id === sourceListId);\r\n              const draggedCard = sourceList.cards.find(card => card.id === draggedCardId);\r\n              const cardIndex = sourceList.cards.findIndex(card => card.id === draggedCardId);\r\n\r\n              if (cardIndex <= 0) {\r\n                  return prevData;\r\n              }\r\n\r\n              const updatedSourceList = {\r\n                  ...sourceList,\r\n                  cards: [...sourceList.cards.slice(0, cardIndex), ...sourceList.cards.slice(cardIndex + 1)]\r\n              };\r\n\r\n              const newIndex = 0\r\n              const updatedTargetList = {\r\n                  ...sourceList,\r\n                  cards: [\r\n                      ...sourceList.cards.slice(0, newIndex),\r\n                      draggedCard,\r\n                      ...sourceList.cards.slice(newIndex),\r\n                  ],\r\n              };\r\n\r\n\r\n              return {\r\n                  ...prevData,\r\n                  lists: prevData.lists.map(list => {\r\n                      if (list.id === sourceListId) {\r\n                          return updatedTargetList;\r\n                      } else {\r\n                          return list;\r\n                      }\r\n                  }),\r\n              };\r\n          });\r\n      }, [setData]);\r\n\r\n      const moveCardBottom = useCallback((draggedCardId, sourceListId) => {\r\n          setData(prevData => {\r\n              const sourceList = prevData.lists.find(list => list.id === sourceListId);\r\n              const draggedCard = sourceList.cards.find(card => card.id === draggedCardId);\r\n              const cardIndex = sourceList.cards.findIndex(card => card.id === draggedCardId);\r\n              if (cardIndex == sourceList.cards.length - 1) {\r\n                  return prevData;\r\n              }\r\n\r\n              const updatedSourceList = {\r\n                  ...sourceList,\r\n                  cards: [...sourceList.cards.slice(0, cardIndex), ...sourceList.cards.slice(cardIndex + 1)]\r\n              };\r\n\r\n              const newIndex = sourceList.cards.length - 1;\r\n              const updatedTargetList = {\r\n                  ...sourceList,\r\n                  cards: [\r\n                      ...sourceList.cards.slice(0, newIndex),\r\n                      draggedCard,\r\n                      ...sourceList.cards.slice(newIndex),\r\n                  ],\r\n              };\r\n              return {\r\n                  ...prevData,\r\n                  lists: prevData.lists.map(list => {\r\n                      if (list.id === sourceListId) {\r\n                          return updatedTargetList;\r\n                      } else {\r\n                          return list;\r\n                      }\r\n                  }),\r\n              };\r\n          });\r\n      }, [setData]);\r\n    const handleUnassignLabel = useCallback((listId, cardId, labelId) => {\r\n        setData(prevData => {\r\n            const updatedLists = prevData.lists.map(list => ({\r\n                ...list,\r\n                cards: list.cards.map(card => {\r\n                    if (card.id === cardId) {\r\n                        const newLabels = card.labels ? card.labels.filter(id => id !== labelId) : [];\r\n                        return { ...card, labels: newLabels };\r\n                    }\r\n                    return card;\r\n                }),\r\n            }));\r\n            return { ...prevData, lists: updatedLists };\r\n        });\r\n    }, [setData]);\r\n\r\n  return (\r\n    <AppContainer>\r\n      <TopSectionContainer>\r\n        <ButtonContainer>\r\n          <button onClick={handleAddListClick}>Добавить семестр</button>\r\n          <CommonButton onClick={handleDownloadBoardClick}>Скачать курс</CommonButton>\r\n          <LoadButton htmlFor=\"fileInput\">Загрузить курс</LoadButton>\r\n          <FileInput\r\n            type=\"file\"\r\n            id=\"fileInput\"\r\n            accept=\".json\"\r\n            onChange={handleLoadBoardChange}\r\n          />\r\n          <CommonButton onClick={handleDeleteBoardClick}>Удалить курс</CommonButton>\r\n        </ButtonContainer>\r\n        <LabelManager\r\n          data={data}\r\n          setData={setData}\r\n          selectedCard={selectedCard}\r\n          setSelectedCard={setSelectedCard}\r\n        />\r\n      </TopSectionContainer>\r\n      <BoardScrollContainer>\r\n        <Board\r\n          data={data}\r\n          setData={setData}\r\n          onCardTextChange={handleCardTextChangeClick}\r\n          onCardDescriptionChange={handleCardDescriptionChangeClick}\r\n          onAddCard={handleAddCardClick}\r\n          onListTitleChange={handleListTitleChangeClick}\r\n          onDeleteList={handleDeleteListClick}\r\n          onDeleteCard={handleDeleteCardClick}\r\n          setSelectedCard={setSelectedCard}\r\n          moveCard={moveCard} // Pass moveCard to Board\r\n          moveCardTop={moveCardTop}\r\n          moveCardBottom={moveCardBottom}\r\n              onUnassignLabel={handleUnassignLabel}\r\n        />\r\n      </BoardScrollContainer>\r\n    </AppContainer>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
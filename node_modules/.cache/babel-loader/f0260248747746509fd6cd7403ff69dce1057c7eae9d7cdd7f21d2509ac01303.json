{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zulda\\\\Desktop\\\\1\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd'; // Импорт библиотеки\nimport Board from './components/Board';\nimport './App.css'; // Импорт общих стилей\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContainer = styled.div`\n  display: flex;\n  overflow-x: auto; /* Горизонтальная прокрутка, если много списков */\n  min-height: 100vh;\n  background-color: #f4f5f7;\n  padding: 20px;\n`;\n_c = AppContainer;\nfunction App() {\n  _s();\n  const [data, setData] = useState({\n    lists: [{\n      id: 'list1',\n      title: 'To Do',\n      cards: [{\n        id: 'card1',\n        text: 'Task 1'\n      }, {\n        id: 'card2',\n        text: 'Task 2'\n      }]\n    }, {\n      id: 'list2',\n      title: 'In Progress',\n      cards: [{\n        id: 'card3',\n        text: 'Task 3'\n      }]\n    }, {\n      id: 'list3',\n      title: 'Done',\n      cards: [{\n        id: 'card4',\n        text: 'Task 4'\n      }, {\n        id: 'card5',\n        text: 'Task 5'\n      }]\n    }]\n  });\n  const onDragEnd = result => {\n    const {\n      destination,\n      source,\n      draggableId,\n      type\n    } = result;\n    if (!destination) {\n      return; // Если перетащили за пределы контейнера\n    }\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\n      return; // Если перетащили в то же место\n    }\n    if (type === 'list') {\n      const newListOrder = Array.from(data.lists);\n      const [movedList] = newListOrder.splice(source.index, 1);\n      newListOrder.splice(destination.index, 0, movedList);\n      setData({\n        ...data,\n        lists: newListOrder\n      });\n      return;\n    }\n    const startList = data.lists.find(list => list.id === source.droppableId);\n    const finishList = data.lists.find(list => list.id === destination.droppableId);\n    if (startList === finishList) {\n      const newCards = Array.from(startList.cards);\n      const [movedCard] = newCards.splice(source.index, 1);\n      newCards.splice(destination.index, 0, movedCard);\n      const newList = {\n        ...startList,\n        cards: newCards\n      };\n      const newData = {\n        ...data,\n        lists: data.lists.map(list => list.id === newList.id ? newList : list)\n      };\n      setData(newData);\n      return;\n    }\n\n    // Перемещение между списками\n    const startCards = Array.from(startList.cards);\n    const [movedCard] = startCards.splice(source.index, 1);\n    const finishCards = Array.from(finishList.cards);\n    finishCards.splice(destination.index, 0, movedCard);\n    const newStartList = {\n      ...startList,\n      cards: startCards\n    };\n    const newFinishList = {\n      ...finishList,\n      cards: finishCards\n    };\n    const newData = {\n      ...data,\n      lists: data.lists.map(list => {\n        if (list.id === newStartList.id) {\n          return newStartList;\n        }\n        if (list.id === newFinishList.id) {\n          return newFinishList;\n        }\n        return list;\n      })\n    };\n    setData(newData);\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(AppContainer, {\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bu5GBYGOKcYTF5f95UsEsIlDfNo=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","DragDropContext","Board","styled","jsxDEV","_jsxDEV","AppContainer","div","_c","App","_s","data","setData","lists","id","title","cards","text","onDragEnd","result","destination","source","draggableId","type","droppableId","index","newListOrder","Array","from","movedList","splice","startList","find","list","finishList","newCards","movedCard","newList","newData","map","startCards","finishCards","newStartList","newFinishList","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/zulda/Desktop/1/src/App.js"],"sourcesContent":["// src/App.js\r\nimport React, { useState } from 'react';\r\nimport { DragDropContext } from 'react-beautiful-dnd'; // Импорт библиотеки\r\nimport Board from './components/Board';\r\nimport './App.css'; // Импорт общих стилей\r\nimport styled from 'styled-components';\r\n\r\nconst AppContainer = styled.div`\r\n  display: flex;\r\n  overflow-x: auto; /* Горизонтальная прокрутка, если много списков */\r\n  min-height: 100vh;\r\n  background-color: #f4f5f7;\r\n  padding: 20px;\r\n`;\r\n\r\nfunction App() {\r\n  const [data, setData] = useState({\r\n    lists: [\r\n      { id: 'list1', title: 'To Do', cards: [{ id: 'card1', text: 'Task 1' }, { id: 'card2', text: 'Task 2' }] },\r\n      { id: 'list2', title: 'In Progress', cards: [{ id: 'card3', text: 'Task 3' }] },\r\n      { id: 'list3', title: 'Done', cards: [{ id: 'card4', text: 'Task 4' }, { id: 'card5', text: 'Task 5' }] },\r\n    ],\r\n  });\r\n\r\n  const onDragEnd = (result) => {\r\n    const { destination, source, draggableId, type } = result;\r\n\r\n    if (!destination) {\r\n      return; // Если перетащили за пределы контейнера\r\n    }\r\n\r\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\r\n      return; // Если перетащили в то же место\r\n    }\r\n\r\n    if (type === 'list') {\r\n      const newListOrder = Array.from(data.lists);\r\n      const [movedList] = newListOrder.splice(source.index, 1);\r\n      newListOrder.splice(destination.index, 0, movedList);\r\n\r\n      setData({ ...data, lists: newListOrder });\r\n      return;\r\n    }\r\n\r\n    const startList = data.lists.find(list => list.id === source.droppableId);\r\n    const finishList = data.lists.find(list => list.id === destination.droppableId);\r\n\r\n    if (startList === finishList) {\r\n      const newCards = Array.from(startList.cards);\r\n      const [movedCard] = newCards.splice(source.index, 1);\r\n      newCards.splice(destination.index, 0, movedCard);\r\n\r\n      const newList = { ...startList, cards: newCards };\r\n      const newData = {\r\n        ...data,\r\n        lists: data.lists.map(list => list.id === newList.id ? newList : list),\r\n      };\r\n\r\n      setData(newData);\r\n      return;\r\n    }\r\n\r\n    // Перемещение между списками\r\n    const startCards = Array.from(startList.cards);\r\n    const [movedCard] = startCards.splice(source.index, 1);\r\n\r\n    const finishCards = Array.from(finishList.cards);\r\n    finishCards.splice(destination.index, 0, movedCard);\r\n\r\n    const newStartList = { ...startList, cards: startCards };\r\n    const newFinishList = { ...finishList, cards: finishCards };\r\n\r\n    const newData = {\r\n      ...data,\r\n      lists: data.lists.map(list => {\r\n        if (list.id === newStartList.id) {\r\n          return newStartList;\r\n        }\r\n        if (list.id === newFinishList.id) {\r\n          return newFinishList;\r\n        }\r\n        return list;\r\n      }),\r\n    };\r\n\r\n    setData(newData);\r\n  };\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n        <AppContainer>\r\n          <Board data={data} />\r\n        </AppContainer>\r\n    </DragDropContext>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// src/utils/dataHandlers.js\n\nexport const handleDownloadBoard = data => {\n  const jsonData = JSON.stringify(data);\n  const blob = new Blob([jsonData], {\n    type: 'application/json'\n  });\n  const url = URL.createObjectURL(blob);\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = 'курс.json';\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n  URL.revokeObjectURL(url);\n};\nexport const handleLoadBoard = (event, setData) => {\n  const file = event.target.files[0];\n  if (file) {\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        let loadedData = JSON.parse(e.target.result);\n\n        // Преобразуем все id в строки\n        loadedData = {\n          ...loadedData,\n          lists: loadedData.lists.map(list => ({\n            ...list,\n            id: String(list.id),\n            cards: list.cards.map(card => ({\n              ...card,\n              id: String(card.id)\n            }))\n          }))\n        };\n        setData(loadedData);\n      } catch (error) {\n        console.error(\"Ошибка при разборе JSON:\", error);\n        alert(\"Не удалось загрузить доску. Неверный формат файла.\");\n      }\n    };\n    reader.readAsText(file);\n  }\n};\nexport const handleDeleteBoard = setData => {\n  setData({\n    lists: []\n  });\n};","map":{"version":3,"names":["handleDownloadBoard","data","jsonData","JSON","stringify","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","handleLoadBoard","event","setData","file","target","files","reader","FileReader","onload","e","loadedData","parse","result","lists","map","list","id","String","cards","card","error","console","alert","readAsText","handleDeleteBoard"],"sources":["C:/Users/zulda/Desktop/2/src/utils/dataHandlers.js"],"sourcesContent":["// src/utils/dataHandlers.js\r\n\r\nexport const handleDownloadBoard = (data) => {\r\n  const jsonData = JSON.stringify(data);\r\n  const blob = new Blob([jsonData], { type: 'application/json' });\r\n  const url = URL.createObjectURL(blob);\r\n  const a = document.createElement('a');\r\n  a.href = url;\r\n  a.download = 'курс.json';\r\n  document.body.appendChild(a);\r\n  a.click();\r\n  document.body.removeChild(a);\r\n  URL.revokeObjectURL(url);\r\n};\r\n\r\nexport const handleLoadBoard = (event, setData) => {\r\n  const file = event.target.files[0];\r\n  if (file) {\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      try {\r\n        let loadedData = JSON.parse(e.target.result);\r\n\r\n        // Преобразуем все id в строки\r\n        loadedData = {\r\n          ...loadedData,\r\n          lists: loadedData.lists.map(list => ({\r\n            ...list,\r\n            id: String(list.id),\r\n            cards: list.cards.map(card => ({\r\n              ...card,\r\n              id: String(card.id)\r\n            }))\r\n          }))\r\n        };\r\n        setData(loadedData);\r\n      } catch (error) {\r\n        console.error(\"Ошибка при разборе JSON:\", error);\r\n        alert(\"Не удалось загрузить доску. Неверный формат файла.\");\r\n      }\r\n    };\r\n    reader.readAsText(file);\r\n  }\r\n};\r\n\r\nexport const handleDeleteBoard = (setData) => {\r\n  setData({ lists: [] });\r\n};"],"mappings":"AAAA;;AAEA,OAAO,MAAMA,mBAAmB,GAAIC,IAAI,IAAK;EAC3C,MAAMC,QAAQ,GAAGC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC;EACrC,MAAMI,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACJ,QAAQ,CAAC,EAAE;IAAEK,IAAI,EAAE;EAAmB,CAAC,CAAC;EAC/D,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;EACrC,MAAMM,CAAC,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;EACrCF,CAAC,CAACG,IAAI,GAAGN,GAAG;EACZG,CAAC,CAACI,QAAQ,GAAG,WAAW;EACxBH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,CAAC,CAAC;EAC5BA,CAAC,CAACO,KAAK,CAAC,CAAC;EACTN,QAAQ,CAACI,IAAI,CAACG,WAAW,CAACR,CAAC,CAAC;EAC5BF,GAAG,CAACW,eAAe,CAACZ,GAAG,CAAC;AAC1B,CAAC;AAED,OAAO,MAAMa,eAAe,GAAGA,CAACC,KAAK,EAAEC,OAAO,KAAK;EACjD,MAAMC,IAAI,GAAGF,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAClC,IAAIF,IAAI,EAAE;IACR,MAAMG,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,MAAM,GAAIC,CAAC,IAAK;MACrB,IAAI;QACF,IAAIC,UAAU,GAAG5B,IAAI,CAAC6B,KAAK,CAACF,CAAC,CAACL,MAAM,CAACQ,MAAM,CAAC;;QAE5C;QACAF,UAAU,GAAG;UACX,GAAGA,UAAU;UACbG,KAAK,EAAEH,UAAU,CAACG,KAAK,CAACC,GAAG,CAACC,IAAI,KAAK;YACnC,GAAGA,IAAI;YACPC,EAAE,EAAEC,MAAM,CAACF,IAAI,CAACC,EAAE,CAAC;YACnBE,KAAK,EAAEH,IAAI,CAACG,KAAK,CAACJ,GAAG,CAACK,IAAI,KAAK;cAC7B,GAAGA,IAAI;cACPH,EAAE,EAAEC,MAAM,CAACE,IAAI,CAACH,EAAE;YACpB,CAAC,CAAC;UACJ,CAAC,CAAC;QACJ,CAAC;QACDd,OAAO,CAACQ,UAAU,CAAC;MACrB,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChDE,KAAK,CAAC,oDAAoD,CAAC;MAC7D;IACF,CAAC;IACDhB,MAAM,CAACiB,UAAU,CAACpB,IAAI,CAAC;EACzB;AACF,CAAC;AAED,OAAO,MAAMqB,iBAAiB,GAAItB,OAAO,IAAK;EAC5CA,OAAO,CAAC;IAAEW,KAAK,EAAE;EAAG,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// src/APP/MainApp.js\nimport React,{useState,useCallback}from'react';import Board from'../components/Board';import{handleAddList,handleDeleteList,handleListTitleChange}from'../utils/listHandlers';import{handleAddCard,handleDeleteCard,handleCardTextChange,handleCardDescriptionChange}from'../utils/cardHandlers';import{handleDownloadBoard,handleLoadBoard,handleDeleteBoard}from'../utils/dataHandlers';import{AppContainer,FileInput,ButtonContainer,LoadButton,CommonButton,BoardScrollContainer,TopSectionContainer}from'../App.styles';// Import styles\nimport LabelManager from'../components/LabelManager';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function MainApp(){const[data,setData]=useState({lists:[{id:'1',title:'1 семестр',cards:[{id:'1',text:'1 предмет',description:'Описание'}]},{id:'2',title:'2 семестр',cards:[{id:'2',text:'1 предмет',description:'Описание'}]},{id:'3',title:'3 семестр',cards:[{id:'3',text:'1 предмет',description:'Описание'}]},{id:'4',title:'4 семестр',cards:[{id:'4',text:'1 предмет',description:'Описание'}]},{id:'5',title:'5 семестр',cards:[{id:'5',text:'1 предмет',description:'Описание'}]},{id:'6',title:'6 семестр',cards:[{id:'6',text:'1 предмет',description:'Описание'}]},{id:'7',title:'7 семестр',cards:[{id:'7',text:'1 предмет',description:'Описание'}]},{id:'8',title:'8 семестр',cards:[{id:'8',text:'1 предмет',description:'Описание'}]}],labels:[]});const[selectedCard,setSelectedCard]=useState(null);const handleAddListClick=useCallback(()=>{handleAddList(data,setData);},[data,setData]);const handleDeleteListClick=useCallback(listId=>{handleDeleteList(listId,data,setData);},[data,setData]);const handleListTitleChangeClick=useCallback((listId,newTitle)=>{handleListTitleChange(listId,newTitle,data,setData);},[data,setData]);const handleAddCardClick=useCallback(listId=>{handleAddCard(listId,data,setData);},[data,setData]);const handleDeleteCardClick=useCallback((listId,cardId)=>{handleDeleteCard(listId,cardId,data,setData);},[data,setData]);const handleCardTextChangeClick=useCallback((listId,cardId,newText)=>{handleCardTextChange(listId,cardId,newText,data,setData);},[data,setData]);const handleCardDescriptionChangeClick=useCallback((listId,cardId,newDescription)=>{handleCardDescriptionChange(listId,cardId,newDescription,data,setData);},[data,setData]);const handleDownloadBoardClick=()=>{handleDownloadBoard(data);};const handleLoadBoardChange=useCallback(event=>{handleLoadBoard(event,setData);},[setData]);const handleDeleteBoardClick=()=>{handleDeleteBoard(setData);};const moveCard=useCallback((draggedCardId,sourceListId,targetCardId,targetListId,direction)=>{setData(prevData=>{const sourceList=prevData.lists.find(list=>list.id===sourceListId);const draggedCard=sourceList.cards.find(card=>card.id===draggedCardId);const cardIndex=sourceList.cards.findIndex(card=>card.id===draggedCardId);// Create a copy of the lists array\nconst newLists=prevData.lists.map(list=>({...list}));// Remove the card from its current position\nif(sourceListId===targetListId||direction==='up'||direction==='down'){// Перемещение внутри одного списка или вверх/вниз\nconst updatedCards=[...sourceList.cards];updatedCards.splice(cardIndex,1);let newIndex;if(direction===\"up\"||direction===\"down\"){newIndex=direction==='up'?Math.max(0,cardIndex-1):Math.min(sourceList.cards.length,cardIndex+1);updatedCards.splice(newIndex,0,draggedCard);}newLists.forEach(list=>{if(list.id===sourceListId){list.cards=updatedCards;}});}else{// Перемещение между разными списками\nnewLists.forEach(list=>{if(list.id===sourceListId){list.cards=list.cards.filter(card=>card.id!==draggedCardId);}});newLists.forEach(list=>{if(list.id===targetListId){list.cards=[...list.cards,draggedCard];}});}return{...prevData,lists:newLists};});},[setData]);const moveCardTop=useCallback((draggedCardId,sourceListId)=>{setData(prevData=>{const sourceList=prevData.lists.find(list=>list.id===sourceListId);const draggedCard=sourceList.cards.find(card=>card.id===draggedCardId);const cardIndex=sourceList.cards.findIndex(card=>card.id===draggedCardId);if(cardIndex<=0){return prevData;}const updatedSourceList={...sourceList,cards:[...sourceList.cards.slice(0,cardIndex),...sourceList.cards.slice(cardIndex+1)]};const newIndex=0;const updatedTargetList={...sourceList,cards:[...sourceList.cards.slice(0,newIndex),draggedCard,...sourceList.cards.slice(newIndex)]};return{...prevData,lists:prevData.lists.map(list=>{if(list.id===sourceListId){return updatedTargetList;}else{return list;}})};});},[setData]);const moveCardBottom=useCallback((draggedCardId,sourceListId)=>{setData(prevData=>{const sourceList=prevData.lists.find(list=>list.id===sourceListId);const draggedCard=sourceList.cards.find(card=>card.id===draggedCardId);const cardIndex=sourceList.cards.findIndex(card=>card.id===draggedCardId);if(cardIndex===sourceList.cards.length-1){return prevData;}const updatedSourceList={...sourceList,cards:[...sourceList.cards.slice(0,cardIndex),...sourceList.cards.slice(cardIndex+1)]};const newIndex=sourceList.cards.length;const updatedTargetList={...sourceList,cards:[...sourceList.cards.slice(0,newIndex),draggedCard,...sourceList.cards.slice(newIndex)]};return{...prevData,lists:prevData.lists.map(list=>{if(list.id===sourceListId){return updatedTargetList;}else{return list;}})};});},[setData]);const handleUnassignLabel=useCallback((listId,cardId,labelId)=>{setData(prevData=>{const updatedLists=prevData.lists.map(list=>({...list,cards:list.cards.map(card=>{if(card.id===cardId){const newLabels=card.labels?card.labels.filter(id=>id!==labelId):[];return{...card,labels:newLabels};}return card;})}));return{...prevData,lists:updatedLists};});},[setData]);return/*#__PURE__*/_jsxs(AppContainer,{children:[/*#__PURE__*/_jsxs(TopSectionContainer,{children:[/*#__PURE__*/_jsxs(ButtonContainer,{children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleAddListClick,children:\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0441\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440\"}),/*#__PURE__*/_jsx(CommonButton,{onClick:handleDownloadBoardClick,children:\"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C \\u043A\\u0443\\u0440\\u0441\"}),/*#__PURE__*/_jsx(LoadButton,{htmlFor:\"fileInput\",children:\"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u043A\\u0443\\u0440\\u0441\"}),/*#__PURE__*/_jsx(FileInput,{type:\"file\",id:\"fileInput\",accept:\".json\",onChange:handleLoadBoardChange}),/*#__PURE__*/_jsx(CommonButton,{onClick:handleDeleteBoardClick,children:\"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u043A\\u0443\\u0440\\u0441\"})]}),/*#__PURE__*/_jsx(LabelManager,{data:data,setData:setData,selectedCard:selectedCard,setSelectedCard:setSelectedCard})]}),/*#__PURE__*/_jsx(BoardScrollContainer,{children:/*#__PURE__*/_jsx(Board,{data:data,setData:setData,onCardTextChange:handleCardTextChangeClick,onCardDescriptionChange:handleCardDescriptionChangeClick,onAddCard:handleAddCardClick,onListTitleChange:handleListTitleChangeClick,onDeleteList:handleDeleteListClick,onDeleteCard:handleDeleteCardClick,setSelectedCard:setSelectedCard,moveCard:moveCard// Pass moveCard to Board\n,moveCardTop:moveCardTop,moveCardBottom:moveCardBottom,onUnassignLabel:handleUnassignLabel})})]});}export default MainApp;","map":{"version":3,"names":["React","useState","useCallback","Board","handleAddList","handleDeleteList","handleListTitleChange","handleAddCard","handleDeleteCard","handleCardTextChange","handleCardDescriptionChange","handleDownloadBoard","handleLoadBoard","handleDeleteBoard","AppContainer","FileInput","ButtonContainer","LoadButton","CommonButton","BoardScrollContainer","TopSectionContainer","LabelManager","jsx","_jsx","jsxs","_jsxs","MainApp","data","setData","lists","id","title","cards","text","description","labels","selectedCard","setSelectedCard","handleAddListClick","handleDeleteListClick","listId","handleListTitleChangeClick","newTitle","handleAddCardClick","handleDeleteCardClick","cardId","handleCardTextChangeClick","newText","handleCardDescriptionChangeClick","newDescription","handleDownloadBoardClick","handleLoadBoardChange","event","handleDeleteBoardClick","moveCard","draggedCardId","sourceListId","targetCardId","targetListId","direction","prevData","sourceList","find","list","draggedCard","card","cardIndex","findIndex","newLists","map","updatedCards","splice","newIndex","Math","max","min","length","forEach","filter","moveCardTop","updatedSourceList","slice","updatedTargetList","moveCardBottom","handleUnassignLabel","labelId","updatedLists","newLabels","children","onClick","htmlFor","type","accept","onChange","onCardTextChange","onCardDescriptionChange","onAddCard","onListTitleChange","onDeleteList","onDeleteCard","onUnassignLabel"],"sources":["C:/Users/zulda/Desktop/5/src/APP/MainApp.js"],"sourcesContent":["// src/APP/MainApp.js\r\nimport React, { useState, useCallback } from 'react';\r\nimport Board from '../components/Board';\r\nimport { handleAddList, handleDeleteList, handleListTitleChange } from '../utils/listHandlers';\r\nimport { handleAddCard, handleDeleteCard, handleCardTextChange, handleCardDescriptionChange } from '../utils/cardHandlers';\r\nimport { handleDownloadBoard, handleLoadBoard, handleDeleteBoard } from '../utils/dataHandlers';\r\nimport { AppContainer, FileInput, ButtonContainer, LoadButton, CommonButton, BoardScrollContainer , TopSectionContainer} from '../App.styles'; // Import styles\r\nimport LabelManager from '../components/LabelManager';\r\n\r\n\r\nfunction MainApp() {\r\n    const [data, setData] = useState({\r\n        lists: [\r\n            { id: '1', title: '1 семестр', cards: [{ id: '1', text: '1 предмет', description: 'Описание' },] },\r\n            { id: '2', title: '2 семестр', cards: [{ id: '2', text: '1 предмет', description: 'Описание' },] },\r\n            { id: '3', title: '3 семестр', cards: [{ id: '3', text: '1 предмет', description: 'Описание' },] },\r\n            { id: '4', title: '4 семестр', cards: [{ id: '4', text: '1 предмет', description: 'Описание' },] },\r\n            { id: '5', title: '5 семестр', cards: [{ id: '5', text: '1 предмет', description: 'Описание' },] },\r\n            { id: '6', title: '6 семестр', cards: [{ id: '6', text: '1 предмет', description: 'Описание' },] },\r\n            { id: '7', title: '7 семестр', cards: [{ id: '7', text: '1 предмет', description: 'Описание' },] },\r\n            { id: '8', title: '8 семестр', cards: [{ id: '8', text: '1 предмет', description: 'Описание' },] },\r\n        ],\r\n        labels: [],\r\n    });\r\n\r\n    const [selectedCard, setSelectedCard] = useState(null);\r\n\r\n    const handleAddListClick = useCallback(() => {\r\n        handleAddList(data, setData);\r\n    }, [data, setData]);\r\n\r\n    const handleDeleteListClick = useCallback((listId) => {\r\n        handleDeleteList(listId, data, setData);\r\n    }, [data, setData]);\r\n\r\n    const handleListTitleChangeClick = useCallback((listId, newTitle) => {\r\n        handleListTitleChange(listId, newTitle, data, setData);\r\n    }, [data, setData]);\r\n\r\n    const handleAddCardClick = useCallback((listId) => {\r\n        handleAddCard(listId, data, setData);\r\n    }, [data, setData]);\r\n\r\n    const handleDeleteCardClick = useCallback((listId, cardId) => {\r\n        handleDeleteCard(listId, cardId, data, setData);\r\n    }, [data, setData]);\r\n\r\n    const handleCardTextChangeClick = useCallback((listId, cardId, newText) => {\r\n        handleCardTextChange(listId, cardId, newText, data, setData);\r\n    }, [data, setData]);\r\n\r\n    const handleCardDescriptionChangeClick = useCallback((listId, cardId, newDescription) => {\r\n        handleCardDescriptionChange(listId, cardId, newDescription, data, setData);\r\n    }, [data, setData]);\r\n\r\n    const handleDownloadBoardClick = () => {\r\n        handleDownloadBoard(data);\r\n    };\r\n\r\n    const handleLoadBoardChange = useCallback((event) => {\r\n        handleLoadBoard(event, setData);\r\n    }, [setData]);\r\n\r\n    const handleDeleteBoardClick = () => {\r\n        handleDeleteBoard(setData);\r\n    };\r\n const moveCard = useCallback((draggedCardId, sourceListId, targetCardId, targetListId, direction) => {\r\n        setData(prevData => {\r\n            const sourceList = prevData.lists.find(list => list.id === sourceListId);\r\n            const draggedCard = sourceList.cards.find(card => card.id === draggedCardId);\r\n            const cardIndex = sourceList.cards.findIndex(card => card.id === draggedCardId);\r\n\r\n            // Create a copy of the lists array\r\n            const newLists = prevData.lists.map(list => ({ ...list }));\r\n\r\n            // Remove the card from its current position\r\n            if (sourceListId === targetListId || (direction === 'up' || direction === 'down')) {\r\n               // Перемещение внутри одного списка или вверх/вниз\r\n                const updatedCards = [...sourceList.cards];\r\n                updatedCards.splice(cardIndex, 1);\r\n                let newIndex;\r\n                if (direction === \"up\" || direction === \"down\") {\r\n                    newIndex = (direction === 'up') ? Math.max(0, cardIndex - 1) : Math.min(sourceList.cards.length, cardIndex + 1);\r\n                    updatedCards.splice(newIndex, 0, draggedCard);\r\n                }\r\n                newLists.forEach(list => {\r\n                    if (list.id === sourceListId) {\r\n                         list.cards = updatedCards;\r\n                    }\r\n                });\r\n\r\n            } else {\r\n                 // Перемещение между разными списками\r\n                  newLists.forEach(list => {\r\n                    if (list.id === sourceListId) {\r\n                         list.cards = list.cards.filter(card => card.id !== draggedCardId);\r\n                    }\r\n                });\r\n                newLists.forEach(list => {\r\n                    if (list.id === targetListId) {\r\n                         list.cards = [...list.cards, draggedCard];\r\n                    }\r\n                });\r\n            }\r\n              \r\n            return {\r\n                ...prevData,\r\n                lists: newLists\r\n            };\r\n        });\r\n    }, [setData]);\r\n\r\n    const moveCardTop = useCallback((draggedCardId, sourceListId) => {\r\n        setData(prevData => {\r\n            const sourceList = prevData.lists.find(list => list.id === sourceListId);\r\n            const draggedCard = sourceList.cards.find(card => card.id === draggedCardId);\r\n\r\n            const cardIndex = sourceList.cards.findIndex(card => card.id === draggedCardId);\r\n\r\n            if (cardIndex <= 0) {\r\n                return prevData;\r\n            }\r\n\r\n            const updatedSourceList = {\r\n                ...sourceList,\r\n                cards: [...sourceList.cards.slice(0, cardIndex), ...sourceList.cards.slice(cardIndex + 1)]\r\n            };\r\n\r\n            const newIndex = 0\r\n            const updatedTargetList = {\r\n                ...sourceList,\r\n                cards: [\r\n                    ...sourceList.cards.slice(0, newIndex),\r\n                    draggedCard,\r\n                    ...sourceList.cards.slice(newIndex),\r\n                ],\r\n            };\r\n\r\n\r\n            return {\r\n                ...prevData,\r\n                lists: prevData.lists.map(list => {\r\n                    if (list.id === sourceListId) {\r\n                        return updatedTargetList;\r\n                    } else {\r\n                        return list;\r\n                    }\r\n                }),\r\n            };\r\n        });\r\n    }, [setData]);\r\n\r\n    const moveCardBottom = useCallback((draggedCardId, sourceListId) => {\r\n        setData(prevData => {\r\n            const sourceList = prevData.lists.find(list => list.id === sourceListId);\r\n            const draggedCard = sourceList.cards.find(card => card.id === draggedCardId);\r\n\r\n            const cardIndex = sourceList.cards.findIndex(card => card.id === draggedCardId);\r\n\r\n            if (cardIndex === sourceList.cards.length - 1) {\r\n                return prevData;\r\n            }\r\n\r\n            const updatedSourceList = {\r\n                ...sourceList,\r\n                cards: [...sourceList.cards.slice(0, cardIndex), ...sourceList.cards.slice(cardIndex + 1)]\r\n            };\r\n\r\n            const newIndex = sourceList.cards.length;\r\n            const updatedTargetList = {\r\n                ...sourceList,\r\n                cards: [\r\n                    ...sourceList.cards.slice(0, newIndex),\r\n                    draggedCard,\r\n                    ...sourceList.cards.slice(newIndex),\r\n                ],\r\n            };\r\n\r\n            return {\r\n                ...prevData,\r\n                lists: prevData.lists.map(list => {\r\n                    if (list.id === sourceListId) {\r\n                        return updatedTargetList;\r\n                    } else {\r\n                        return list;\r\n                    }\r\n                }),\r\n            };\r\n        });\r\n    }, [setData]);\r\n\r\n\r\n    const handleUnassignLabel = useCallback((listId, cardId, labelId) => {\r\n        setData(prevData => {\r\n            const updatedLists = prevData.lists.map(list => ({\r\n                ...list,\r\n                cards: list.cards.map(card => {\r\n                    if (card.id === cardId) {\r\n                        const newLabels = card.labels ? card.labels.filter(id => id !== labelId) : [];\r\n                        return { ...card, labels: newLabels };\r\n                    }\r\n                    return card;\r\n                }),\r\n            }));\r\n            return { ...prevData, lists: updatedLists };\r\n        });\r\n    }, [setData]);\r\n\r\n\r\n    return (\r\n        \r\n        <AppContainer>\r\n            <TopSectionContainer>  \r\n                <ButtonContainer>\r\n                    \r\n                    <button onClick={handleAddListClick}>Добавить семестр</button>\r\n                    <CommonButton onClick={handleDownloadBoardClick}>Скачать курс</CommonButton>\r\n                    <LoadButton htmlFor=\"fileInput\">Загрузить курс</LoadButton>\r\n                    <FileInput\r\n                        type=\"file\"\r\n                        id=\"fileInput\"\r\n                        accept=\".json\"\r\n                        onChange={handleLoadBoardChange}\r\n                    />\r\n                    <CommonButton onClick={handleDeleteBoardClick}>Удалить курс</CommonButton>\r\n                </ButtonContainer>\r\n                <LabelManager\r\n                    data={data}\r\n                    setData={setData}\r\n                    selectedCard={selectedCard}\r\n                    setSelectedCard={setSelectedCard}\r\n                />\r\n            </TopSectionContainer>\r\n            <BoardScrollContainer>\r\n                <Board\r\n                    data={data}\r\n                    setData={setData}\r\n                    onCardTextChange={handleCardTextChangeClick}\r\n                    onCardDescriptionChange={handleCardDescriptionChangeClick}\r\n                    onAddCard={handleAddCardClick}\r\n                    onListTitleChange={handleListTitleChangeClick}\r\n                    onDeleteList={handleDeleteListClick}\r\n                    onDeleteCard={handleDeleteCardClick}\r\n                    setSelectedCard={setSelectedCard}\r\n                    moveCard={moveCard} // Pass moveCard to Board\r\n                    moveCardTop={moveCardTop}\r\n                    moveCardBottom={moveCardBottom}\r\n                    onUnassignLabel={handleUnassignLabel}\r\n                />\r\n            </BoardScrollContainer>\r\n        </AppContainer>\r\n    );\r\n}\r\n\r\nexport default MainApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
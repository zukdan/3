{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zulda\\\\Desktop\\\\2\\\\src\\\\pages\\\\EduProgram.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Semester from \"../components/Semester\";\nimport CourseForm from \"../components/CourseForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EduProgram({\n  data,\n  setData\n}) {\n  _s();\n  const [semesters, setSemesters] = useState(data || [{\n    id: 1,\n    name: \"1 семестр\",\n    courses: []\n  }, {\n    id: 2,\n    name: \"2 семестр\",\n    courses: []\n  }]);\n  useEffect(() => {\n    if (data) setSemesters(data);\n  }, [data]);\n  const addCourse = (course, description, semesterId) => {\n    setSemesters(prev => prev.map(sem => sem.id === semesterId ? {\n      ...sem,\n      courses: [...sem.courses, {\n        name: course,\n        description\n      }]\n    } : sem));\n  };\n  const addSemester = () => {\n    const newId = semesters.length + 1;\n    setSemesters([...semesters, {\n      id: newId,\n      name: `${newId} семестр`,\n      courses: []\n    }]);\n  };\n  useEffect(() => {\n    setData(semesters);\n  }, [semesters, setData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 grid grid-cols-2 gap-4\",\n    children: [semesters.map(sem => /*#__PURE__*/_jsxDEV(Semester, {\n      semester: sem\n    }, sem.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(CourseForm, {\n      addCourse: addCourse,\n      semesters: semesters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addSemester,\n      className: \"p-2 bg-green-500 text-white rounded mt-4\",\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0441\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(EduProgram, \"wTS3VqaTRDn1bUhXKaIW4kwSyn8=\");\n_c = EduProgram;\nvar _c;\n$RefreshReg$(_c, \"EduProgram\");","map":{"version":3,"names":["useEffect","useState","Semester","CourseForm","jsxDEV","_jsxDEV","EduProgram","data","setData","_s","semesters","setSemesters","id","name","courses","addCourse","course","description","semesterId","prev","map","sem","addSemester","newId","length","className","children","semester","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/zulda/Desktop/2/src/pages/EduProgram.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Semester from \"../components/Semester\";\r\nimport CourseForm from \"../components/CourseForm\";\r\n\r\nexport default function EduProgram({ data, setData }) {\r\n  const [semesters, setSemesters] = useState(\r\n    data || [\r\n      { id: 1, name: \"1 семестр\", courses: [] },\r\n      { id: 2, name: \"2 семестр\", courses: [] },\r\n    ]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data) setSemesters(data);\r\n  }, [data]);\r\n\r\n  const addCourse = (course, description, semesterId) => {\r\n    setSemesters((prev) =>\r\n      prev.map((sem) =>\r\n        sem.id === semesterId\r\n          ? { ...sem, courses: [...sem.courses, { name: course, description }] }\r\n          : sem\r\n      )\r\n    );\r\n  };\r\n\r\n  const addSemester = () => {\r\n    const newId = semesters.length + 1;\r\n    setSemesters([...semesters, { id: newId, name: `${newId} семестр`, courses: [] }]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setData(semesters);\r\n  }, [semesters, setData]);\r\n\r\n  return (\r\n    <div className=\"p-4 grid grid-cols-2 gap-4\">\r\n      {semesters.map((sem) => (\r\n        <Semester key={sem.id} semester={sem} />\r\n      ))}\r\n      <CourseForm addCourse={addCourse} semesters={semesters} />\r\n      <button onClick={addSemester} className=\"p-2 bg-green-500 text-white rounded mt-4\">\r\n        Добавить семестр\r\n      </button>\r\n    </div>\r\n  );\r\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,eAAe,SAASC,UAAUA,CAAC;EAAEC,IAAI;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACpD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CACxCM,IAAI,IAAI,CACN;IAAEK,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,WAAW;IAAEC,OAAO,EAAE;EAAG,CAAC,EACzC;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,WAAW;IAAEC,OAAO,EAAE;EAAG,CAAC,CAE7C,CAAC;EAEDd,SAAS,CAAC,MAAM;IACd,IAAIO,IAAI,EAAEI,YAAY,CAACJ,IAAI,CAAC;EAC9B,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,MAAMQ,SAAS,GAAGA,CAACC,MAAM,EAAEC,WAAW,EAAEC,UAAU,KAAK;IACrDP,YAAY,CAAEQ,IAAI,IAChBA,IAAI,CAACC,GAAG,CAAEC,GAAG,IACXA,GAAG,CAACT,EAAE,KAAKM,UAAU,GACjB;MAAE,GAAGG,GAAG;MAAEP,OAAO,EAAE,CAAC,GAAGO,GAAG,CAACP,OAAO,EAAE;QAAED,IAAI,EAAEG,MAAM;QAAEC;MAAY,CAAC;IAAE,CAAC,GACpEI,GACN,CACF,CAAC;EACH,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,KAAK,GAAGb,SAAS,CAACc,MAAM,GAAG,CAAC;IAClCb,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAE;MAAEE,EAAE,EAAEW,KAAK;MAAEV,IAAI,EAAE,GAAGU,KAAK,UAAU;MAAET,OAAO,EAAE;IAAG,CAAC,CAAC,CAAC;EACpF,CAAC;EAEDd,SAAS,CAAC,MAAM;IACdQ,OAAO,CAACE,SAAS,CAAC;EACpB,CAAC,EAAE,CAACA,SAAS,EAAEF,OAAO,CAAC,CAAC;EAExB,oBACEH,OAAA;IAAKoB,SAAS,EAAC,4BAA4B;IAAAC,QAAA,GACxChB,SAAS,CAACU,GAAG,CAAEC,GAAG,iBACjBhB,OAAA,CAACH,QAAQ;MAAcyB,QAAQ,EAAEN;IAAI,GAAtBA,GAAG,CAACT,EAAE;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAkB,CACxC,CAAC,eACF1B,OAAA,CAACF,UAAU;MAACY,SAAS,EAAEA,SAAU;MAACL,SAAS,EAAEA;IAAU;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1D1B,OAAA;MAAQ2B,OAAO,EAAEV,WAAY;MAACG,SAAS,EAAC,0CAA0C;MAAAC,QAAA,EAAC;IAEnF;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACtB,EAAA,CA1CuBH,UAAU;AAAA2B,EAAA,GAAV3B,UAAU;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zulda\\\\Desktop\\\\1\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useCallback } from 'react';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'; // Import Droppable\nimport Board from './components/Board';\nimport styled from 'styled-components';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContainer = styled.div`\n  display: flex;\n  overflow-x: auto;\n  min-height: 100vh;\n  background-color: #f4f5f7;\n  padding: 20px;\n`;\n_c = AppContainer;\nconst AddButton = styled.button`\n  background-color: #5aac44;\n  color: white;\n  border: none;\n  border-radius: 3px;\n  padding: 8px 12px;\n  margin-left: 10px;\n  cursor: pointer;\n`;\n_c2 = AddButton;\nconst FileInput = styled.input`\n  margin-left: 10px;\n  display: none;\n`;\n_c3 = FileInput;\nconst ButtonContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 10px;\n`;\n_c4 = ButtonContainer;\nconst LoadButton = styled.label`\n  background-color: #2e86de;\n  color: white;\n  border: none;\n  border-radius: 3px;\n  padding: 8px 12px;\n  margin-left: 10px;\n  cursor: pointer;\n  display: inline-block;\n`;\n_c5 = LoadButton;\nfunction App() {\n  _s();\n  const [data, setData] = useState({\n    lists: [{\n      id: 'list1',\n      title: 'To Do',\n      cards: [{\n        id: 'card1',\n        text: 'Task 1',\n        description: 'Description 1'\n      }, {\n        id: 'card2',\n        text: 'Task 2',\n        description: 'Description 2'\n      }]\n    }, {\n      id: 'list2',\n      title: 'In Progress',\n      cards: [{\n        id: 'card3',\n        text: 'Task 3',\n        description: 'Description 3'\n      }]\n    }, {\n      id: 'list3',\n      title: 'Done',\n      cards: [{\n        id: 'card4',\n        text: 'Task 4',\n        description: 'Description 4'\n      }, {\n        id: 'card5',\n        text: 'Task 5',\n        description: 'Description 5'\n      }]\n    }]\n  });\n  const onDragEnd = result => {\n    const {\n      destination,\n      source,\n      draggableId,\n      type\n    } = result;\n    if (!destination) {\n      return;\n    }\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n    if (type === 'list') {\n      const newListOrder = Array.from(data.lists);\n      const [movedList] = newListOrder.splice(source.index, 1);\n      newListOrder.splice(destination.index, 0, movedList);\n      setData({\n        ...data,\n        lists: newListOrder\n      });\n      return;\n    }\n    const startList = data.lists.find(list => list.id === source.droppableId);\n    const finishList = data.lists.find(list => list.id === destination.droppableId);\n    if (startList === finishList) {\n      const newCards = Array.from(startList.cards);\n      const [movedCard] = newCards.splice(source.index, 1);\n      newCards.splice(destination.index, 0, movedCard);\n      const newList = {\n        ...startList,\n        cards: newCards\n      };\n      const newData = {\n        ...data,\n        lists: data.lists.map(list => list.id === newList.id ? newList : list)\n      };\n      setData(newData);\n      return;\n    }\n    const startCards = Array.from(startList.cards);\n    const [movedCard] = startCards.splice(source.index, 1);\n    const finishCards = Array.from(finishList.cards);\n    finishCards.splice(destination.index, 0, movedCard);\n    const newStartList = {\n      ...startList,\n      cards: startCards\n    };\n    const newFinishList = {\n      ...finishList,\n      cards: finishCards\n    };\n    const newData = {\n      ...data,\n      lists: data.lists.map(list => {\n        if (list.id === newStartList.id) {\n          return newStartList;\n        }\n        if (list.id === newFinishList.id) {\n          return newFinishList;\n        }\n        return list;\n      })\n    };\n    setData(newData);\n  };\n  const handleCardTextChange = useCallback((listId, cardId, newText) => {\n    const newData = {\n      ...data,\n      lists: data.lists.map(list => {\n        if (list.id === listId) {\n          return {\n            ...list,\n            cards: list.cards.map(card => {\n              if (card.id === cardId) {\n                return {\n                  ...card,\n                  text: newText\n                };\n              }\n              return card;\n            })\n          };\n        }\n        return list;\n      })\n    };\n    setData(newData);\n  }, [data, setData]);\n  const handleCardDescriptionChange = useCallback((listId, cardId, newDescription) => {\n    const newData = {\n      ...data,\n      lists: data.lists.map(list => {\n        if (list.id === listId) {\n          return {\n            ...list,\n            cards: list.cards.map(card => {\n              if (card.id === cardId) {\n                return {\n                  ...card,\n                  description: newDescription\n                };\n              }\n              return card;\n            })\n          };\n        }\n        return list;\n      })\n    };\n    setData(newData);\n  }, [data, setData]);\n  const handleAddList = () => {\n    const newList = {\n      id: uuidv4(),\n      title: 'New List',\n      cards: []\n    };\n    setData({\n      ...data,\n      lists: [...data.lists, newList]\n    });\n  };\n  const handleAddCard = useCallback(listId => {\n    const newCard = {\n      id: uuidv4(),\n      text: 'New Card',\n      description: ''\n    };\n    const newData = {\n      ...data,\n      lists: data.lists.map(list => {\n        if (list.id === listId) {\n          return {\n            ...list,\n            cards: [...list.cards, newCard]\n          };\n        }\n        return list;\n      })\n    };\n    setData(newData);\n  }, [data, setData]);\n  const handleDeleteList = useCallback(listId => {\n    const newData = {\n      ...data,\n      lists: data.lists.filter(list => list.id !== listId)\n    };\n    setData(newData);\n  }, [data, setData]);\n  const handleDeleteCard = useCallback((listId, cardId) => {\n    const newData = {\n      ...data,\n      lists: data.lists.map(list => {\n        if (list.id === listId) {\n          return {\n            ...list,\n            cards: list.cards.filter(card => card.id !== cardId)\n          };\n        }\n        return list;\n      })\n    };\n    setData(newData);\n  }, [data, setData]);\n  const handleDownloadBoard = () => {\n    const jsonData = JSON.stringify(data);\n    const blob = new Blob([jsonData], {\n      type: 'application/json'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'board.json';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n  const handleLoadBoard = useCallback(event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        try {\n          const loadedData = JSON.parse(e.target.result);\n          setData(loadedData);\n        } catch (error) {\n          console.error(\"Error parsing JSON:\", error);\n          alert(\"Failed to load board. Invalid file format.\");\n        }\n      };\n      reader.readAsText(file);\n    }\n  }, [setData]);\n  const handleDeleteBoard = () => {\n    setData({\n      lists: []\n    });\n  };\n  const handleListTitleChange = useCallback((listId, newTitle) => {\n    const newData = {\n      ...data,\n      lists: data.lists.map(list => {\n        if (list.id === listId) {\n          return {\n            ...list,\n            title: newTitle\n          };\n        }\n        return list;\n      })\n    };\n    setData(newData);\n  }, [data, setData]);\n  console.log(\"App.js - droppableId:\", \"board\");\n  console.log(\"App.js - data:\", data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"board\",\n        direction: \"horizontal\",\n        type: \"list\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(AppContainer, {\n            ...provided.droppableProps,\n            ref: provided.innerRef,\n            children: [/*#__PURE__*/_jsxDEV(Board, {\n              data: data,\n              onCardTextChange: handleCardTextChange,\n              onCardDescriptionChange: handleCardDescriptionChange,\n              onAddCard: handleAddCard,\n              onListTitleChange: handleListTitleChange,\n              onDeleteList: handleDeleteList,\n              onDeleteCard: handleDeleteCard\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this), provided.placeholder, /*#__PURE__*/_jsxDEV(AddButton, {\n              onClick: handleAddList,\n              children: \"Add List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownloadBoard,\n        children: \"Download Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoadButton, {\n        htmlFor: \"fileInput\",\n        children: \"Load Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FileInput, {\n        type: \"file\",\n        id: \"fileInput\",\n        accept: \".json\",\n        onChange: handleLoadBoard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeleteBoard,\n        children: \"Delete Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 263,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"94Wr2uUVnyEldclgv3zOzzbpHLc=\");\n_c6 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"AddButton\");\n$RefreshReg$(_c3, \"FileInput\");\n$RefreshReg$(_c4, \"ButtonContainer\");\n$RefreshReg$(_c5, \"LoadButton\");\n$RefreshReg$(_c6, \"App\");","map":{"version":3,"names":["React","useState","useCallback","DragDropContext","Droppable","Board","styled","v4","uuidv4","jsxDEV","_jsxDEV","AppContainer","div","_c","AddButton","button","_c2","FileInput","input","_c3","ButtonContainer","_c4","LoadButton","label","_c5","App","_s","data","setData","lists","id","title","cards","text","description","onDragEnd","result","destination","source","draggableId","type","droppableId","index","newListOrder","Array","from","movedList","splice","startList","find","list","finishList","newCards","movedCard","newList","newData","map","startCards","finishCards","newStartList","newFinishList","handleCardTextChange","listId","cardId","newText","card","handleCardDescriptionChange","newDescription","handleAddList","handleAddCard","newCard","handleDeleteList","filter","handleDeleteCard","handleDownloadBoard","jsonData","JSON","stringify","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","handleLoadBoard","event","file","target","files","reader","FileReader","onload","e","loadedData","parse","error","console","alert","readAsText","handleDeleteBoard","handleListTitleChange","newTitle","log","children","direction","provided","droppableProps","ref","innerRef","onCardTextChange","onCardDescriptionChange","onAddCard","onListTitleChange","onDeleteList","onDeleteCard","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onClick","htmlFor","accept","onChange","_c6","$RefreshReg$"],"sources":["C:/Users/zulda/Desktop/1/src/App.js"],"sourcesContent":["// src/App.js\r\nimport React, { useState, useCallback } from 'react';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'; // Import Droppable\r\nimport Board from './components/Board';\r\nimport styled from 'styled-components';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst AppContainer = styled.div`\r\n  display: flex;\r\n  overflow-x: auto;\r\n  min-height: 100vh;\r\n  background-color: #f4f5f7;\r\n  padding: 20px;\r\n`;\r\n\r\nconst AddButton = styled.button`\r\n  background-color: #5aac44;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 3px;\r\n  padding: 8px 12px;\r\n  margin-left: 10px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst FileInput = styled.input`\r\n  margin-left: 10px;\r\n  display: none;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst LoadButton = styled.label`\r\n  background-color: #2e86de;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 3px;\r\n  padding: 8px 12px;\r\n  margin-left: 10px;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n`;\r\n\r\nfunction App() {\r\n  const [data, setData] = useState({\r\n    lists: [\r\n      { id: 'list1', title: 'To Do', cards: [{ id: 'card1', text: 'Task 1', description: 'Description 1' }, { id: 'card2', text: 'Task 2', description: 'Description 2' }] },\r\n      { id: 'list2', title: 'In Progress', cards: [{ id: 'card3', text: 'Task 3', description: 'Description 3' }] },\r\n      { id: 'list3', title: 'Done', cards: [{ id: 'card4', text: 'Task 4', description: 'Description 4' }, { id: 'card5', text: 'Task 5', description: 'Description 5' }] },\r\n    ],\r\n  });\r\n\r\n  const onDragEnd = (result) => {\r\n    const { destination, source, draggableId, type } = result;\r\n\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\r\n      return;\r\n    }\r\n\r\n    if (type === 'list') {\r\n      const newListOrder = Array.from(data.lists);\r\n      const [movedList] = newListOrder.splice(source.index, 1);\r\n      newListOrder.splice(destination.index, 0, movedList);\r\n\r\n      setData({ ...data, lists: newListOrder });\r\n      return;\r\n    }\r\n\r\n    const startList = data.lists.find(list => list.id === source.droppableId);\r\n    const finishList = data.lists.find(list => list.id === destination.droppableId);\r\n\r\n    if (startList === finishList) {\r\n      const newCards = Array.from(startList.cards);\r\n      const [movedCard] = newCards.splice(source.index, 1);\r\n      newCards.splice(destination.index, 0, movedCard);\r\n\r\n      const newList = { ...startList, cards: newCards };\r\n      const newData = {\r\n        ...data,\r\n        lists: data.lists.map(list => list.id === newList.id ? newList : list),\r\n      };\r\n\r\n      setData(newData);\r\n      return;\r\n    }\r\n\r\n    const startCards = Array.from(startList.cards);\r\n    const [movedCard] = startCards.splice(source.index, 1);\r\n\r\n    const finishCards = Array.from(finishList.cards);\r\n    finishCards.splice(destination.index, 0, movedCard);\r\n\r\n    const newStartList = { ...startList, cards: startCards };\r\n    const newFinishList = { ...finishList, cards: finishCards };\r\n\r\n    const newData = {\r\n      ...data,\r\n      lists: data.lists.map(list => {\r\n        if (list.id === newStartList.id) {\r\n          return newStartList;\r\n        }\r\n        if (list.id === newFinishList.id) {\r\n          return newFinishList;\r\n        }\r\n        return list;\r\n      }),\r\n    };\r\n\r\n    setData(newData);\r\n  };\r\n\r\n  const handleCardTextChange = useCallback((listId, cardId, newText) => {\r\n    const newData = {\r\n      ...data,\r\n      lists: data.lists.map(list => {\r\n        if (list.id === listId) {\r\n          return {\r\n            ...list,\r\n            cards: list.cards.map(card => {\r\n              if (card.id === cardId) {\r\n                return { ...card, text: newText };\r\n              }\r\n              return card;\r\n            }),\r\n          };\r\n        }\r\n        return list;\r\n      }),\r\n    };\r\n    setData(newData);\r\n  }, [data, setData]);\r\n\r\n  const handleCardDescriptionChange = useCallback((listId, cardId, newDescription) => {\r\n    const newData = {\r\n      ...data,\r\n      lists: data.lists.map(list => {\r\n        if (list.id === listId) {\r\n          return {\r\n            ...list,\r\n            cards: list.cards.map(card => {\r\n              if (card.id === cardId) {\r\n                return { ...card, description: newDescription };\r\n              }\r\n              return card;\r\n            }),\r\n          };\r\n        }\r\n        return list;\r\n      }),\r\n    };\r\n    setData(newData);\r\n  }, [data, setData]);\r\n\r\n  const handleAddList = () => {\r\n    const newList = {\r\n      id: uuidv4(),\r\n      title: 'New List',\r\n      cards: [],\r\n    };\r\n    setData({ ...data, lists: [...data.lists, newList] });\r\n  };\r\n\r\n    const handleAddCard = useCallback((listId) => {\r\n        const newCard = {\r\n            id: uuidv4(),\r\n            text: 'New Card',\r\n            description: '',\r\n        };\r\n        const newData = {\r\n            ...data,\r\n            lists: data.lists.map(list => {\r\n                if (list.id === listId) {\r\n                    return { ...list, cards: [...list.cards, newCard] };\r\n                }\r\n                return list;\r\n            }),\r\n        };\r\n        setData(newData);\r\n    }, [data, setData]);\r\n\r\n    const handleDeleteList = useCallback((listId) => {\r\n        const newData = {\r\n            ...data,\r\n            lists: data.lists.filter(list => list.id !== listId),\r\n        };\r\n        setData(newData);\r\n    }, [data, setData]);\r\n\r\n    const handleDeleteCard = useCallback((listId, cardId) => {\r\n        const newData = {\r\n            ...data,\r\n            lists: data.lists.map(list => {\r\n                if (list.id === listId) {\r\n                    return {\r\n                        ...list,\r\n                        cards: list.cards.filter(card => card.id !== cardId),\r\n                    };\r\n                }\r\n                return list;\r\n            }),\r\n        };\r\n        setData(newData);\r\n    }, [data, setData]);\r\n\r\n  const handleDownloadBoard = () => {\r\n    const jsonData = JSON.stringify(data);\r\n    const blob = new Blob([jsonData], { type: 'application/json' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = 'board.json';\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n    const handleLoadBoard = useCallback((event) => {\r\n        const file = event.target.files[0];\r\n        if (file) {\r\n            const reader = new FileReader();\r\n            reader.onload = (e) => {\r\n                try {\r\n                    const loadedData = JSON.parse(e.target.result);\r\n                    setData(loadedData);\r\n                } catch (error) {\r\n                    console.error(\"Error parsing JSON:\", error);\r\n                    alert(\"Failed to load board. Invalid file format.\");\r\n                }\r\n            };\r\n            reader.readAsText(file);\r\n        }\r\n    }, [setData]);\r\n\r\n  const handleDeleteBoard = () => {\r\n    setData({ lists: [] });\r\n  };\r\n\r\n  const handleListTitleChange = useCallback((listId, newTitle) => {\r\n      const newData = {\r\n          ...data,\r\n          lists: data.lists.map(list => {\r\n              if (list.id === listId) {\r\n                  return { ...list, title: newTitle };\r\n              }\r\n              return list;\r\n          }),\r\n      };\r\n      setData(newData);\r\n  }, [data, setData]);\r\n  \r\n  console.log(\"App.js - droppableId:\", \"board\");\r\n  console.log(\"App.js - data:\", data);\r\n  return (\r\n    <div>\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId=\"board\" direction=\"horizontal\" type=\"list\">\r\n          {(provided) => (\r\n            <div>\r\n            <AppContainer\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n            >\r\n              <Board\r\n                data={data}\r\n                onCardTextChange={handleCardTextChange}\r\n                onCardDescriptionChange={handleCardDescriptionChange}\r\n                onAddCard={handleAddCard}\r\n                onListTitleChange={handleListTitleChange}\r\n                onDeleteList={handleDeleteList}\r\n                onDeleteCard={handleDeleteCard}\r\n              />\r\n              {provided.placeholder}\r\n              <AddButton onClick={handleAddList}>Add List</AddButton>\r\n            </AppContainer>\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n      <ButtonContainer>\r\n        <button onClick={handleDownloadBoard}>Download Board</button>\r\n        <LoadButton htmlFor=\"fileInput\">Load Board</LoadButton>\r\n        <FileInput\r\n          type=\"file\"\r\n          id=\"fileInput\"\r\n          accept=\".json\"\r\n          onChange={handleLoadBoard}\r\n        />\r\n        <button onClick={handleDeleteBoard}>Delete Board</button>\r\n      </ButtonContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
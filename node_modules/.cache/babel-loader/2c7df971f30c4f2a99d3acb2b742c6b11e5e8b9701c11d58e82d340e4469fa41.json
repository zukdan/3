{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zulda\\\\Desktop\\\\1\\\\src\\\\components\\\\Card.js\",\n  _s = $RefreshSig$();\n// src/components/Card.js\nimport React, { useState, useCallback } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardContainer = styled.div`\n  background-color: #fff;\n  border-radius: 3px;\n  padding: 8px;\n  margin-bottom: 8px;\n  box-shadow: 0 1px 0 rgba(9, 30, 66, 0.25);\n`;\n_c = CardContainer;\nconst CardTextarea = styled.textarea`\n  width: 100%;\n  border: none;\n  resize: none;\n  font-size: 16px;\n  padding: 4px;\n  box-sizing: border-box;\n  &:focus {\n    outline: none;\n  }\n`;\n_c2 = CardTextarea;\nconst CardDescriptionArea = styled.textarea`\n  width: 100%;\n  border: none;\n  resize: none;\n  font-size: 12px;\n  padding: 4px;\n  box-sizing: border-box;\n  color: #555;\n  &:focus {\n    outline: none;\n  }\n`;\n_c3 = CardDescriptionArea;\nfunction Card({\n  card,\n  index,\n  listId,\n  onTextChange,\n  onDescriptionChange\n}) {\n  _s();\n  const [text, setText] = useState(card.text);\n  const [description, setDescription] = useState(card.description);\n  const handleTextChange = useCallback(e => {\n    const newText = e.target.value;\n    setText(newText);\n    onTextChange(listId, card.id, newText);\n  }, [card.id, listId, onTextChange]);\n  const handleDescriptionChange = useCallback(e => {\n    const newDescription = e.target.value;\n    setDescription(newDescription);\n    onDescriptionChange(listId, card.id, newDescription);\n  }, [card.id, listId, onDescriptionChange]);\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    draggableId: card.id,\n    index: index,\n    children: provided => /*#__PURE__*/_jsxDEV(CardContainer, {\n      ref: provided.innerRef,\n      ...provided.draggableProps,\n      ...provided.dragHandleProps,\n      children: [/*#__PURE__*/_jsxDEV(CardTextarea, {\n        value: text,\n        onChange: handleTextChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CardDescriptionArea, {\n        value: description,\n        onChange: handleDescriptionChange,\n        placeholder: \"Add a description...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(Card, \"rTzSfajyS+G5WQM3zepgBNiPX6o=\");\n_c4 = Card;\nexport default Card;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"CardContainer\");\n$RefreshReg$(_c2, \"CardTextarea\");\n$RefreshReg$(_c3, \"CardDescriptionArea\");\n$RefreshReg$(_c4, \"Card\");","map":{"version":3,"names":["React","useState","useCallback","Draggable","styled","jsxDEV","_jsxDEV","CardContainer","div","_c","CardTextarea","textarea","_c2","CardDescriptionArea","_c3","Card","card","index","listId","onTextChange","onDescriptionChange","_s","text","setText","description","setDescription","handleTextChange","e","newText","target","value","id","handleDescriptionChange","newDescription","draggableId","children","provided","ref","innerRef","draggableProps","dragHandleProps","onChange","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","_c4","$RefreshReg$"],"sources":["C:/Users/zulda/Desktop/1/src/components/Card.js"],"sourcesContent":["// src/components/Card.js\r\nimport React, { useState, useCallback } from 'react';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport styled from 'styled-components';\r\n\r\nconst CardContainer = styled.div`\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  padding: 8px;\r\n  margin-bottom: 8px;\r\n  box-shadow: 0 1px 0 rgba(9, 30, 66, 0.25);\r\n`;\r\n\r\nconst CardTextarea = styled.textarea`\r\n  width: 100%;\r\n  border: none;\r\n  resize: none;\r\n  font-size: 16px;\r\n  padding: 4px;\r\n  box-sizing: border-box;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst CardDescriptionArea = styled.textarea`\r\n  width: 100%;\r\n  border: none;\r\n  resize: none;\r\n  font-size: 12px;\r\n  padding: 4px;\r\n  box-sizing: border-box;\r\n  color: #555;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nfunction Card({ card, index, listId, onTextChange, onDescriptionChange }) {\r\n    const [text, setText] = useState(card.text);\r\n    const [description, setDescription] = useState(card.description);\r\n\r\n    const handleTextChange = useCallback((e) => {\r\n        const newText = e.target.value;\r\n        setText(newText);\r\n        onTextChange(listId, card.id, newText);\r\n    }, [card.id, listId, onTextChange]);\r\n\r\n    const handleDescriptionChange = useCallback((e) => {\r\n        const newDescription = e.target.value;\r\n        setDescription(newDescription);\r\n        onDescriptionChange(listId, card.id, newDescription);\r\n    }, [card.id, listId, onDescriptionChange]);\r\n\r\n\r\n  return (\r\n    <Draggable draggableId={card.id} index={index}>\r\n      {(provided) => (\r\n        <CardContainer\r\n          ref={provided.innerRef}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n        >\r\n          <CardTextarea\r\n            value={text}\r\n            onChange={handleTextChange}\r\n          />\r\n          <CardDescriptionArea\r\n            value={description}\r\n            onChange={handleDescriptionChange}\r\n            placeholder=\"Add a description...\"\r\n          />\r\n        </CardContainer>\r\n      )}\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default Card;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zulda\\\\Desktop\\\\5\\\\src\\\\components\\\\LabelManager.js\",\n  _s = $RefreshSig$();\n// src/components/LabelManager.js\nimport React, { useState, useCallback } from 'react';\nimport { LabelManagerContainer, LabelList, LabelItem, AddLabelButton, LabelInput, DeleteLabelButton } from './LabelManager.styles';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LabelManager({\n  data,\n  setData,\n  selectedCard,\n  setSelectedCard\n}) {\n  _s();\n  const [newLabelName, setNewLabelName] = useState('');\n  const [newLabelColor, setNewLabelColor] = useState('#ccc');\n  const handleAddLabel = useCallback(() => {\n    if (!selectedCard) return; // Проверяем, выбрана ли карточка\n\n    // Логика добавления новой метки в состояние data\n    const newLabel = {\n      id: Math.random().toString(36).substring(7),\n      // Генерация случайного ID\n      name: newLabelName,\n      color: newLabelColor\n    };\n    setData(prevData => ({\n      ...prevData,\n      labels: [...(prevData.labels || []), newLabel]\n    }));\n    setNewLabelName('');\n    setNewLabelColor('#ccc');\n  }, [newLabelName, newLabelColor, setData, selectedCard]); // Добавляем selectedCard в зависимости\n\n  const handleAssignLabel = useCallback(labelId => {\n    if (!selectedCard) return;\n\n    // Логика привязки метки к выбранной карточке\n    setData(prevData => {\n      const updatedLists = prevData.lists.map(list => ({\n        ...list,\n        cards: list.cards.map(card => {\n          if (card.id === selectedCard.id) {\n            const newLabels = card.labels ? [...card.labels, labelId] : [labelId];\n            return {\n              ...card,\n              labels: newLabels\n            };\n          }\n          return card;\n        })\n      }));\n      return {\n        ...prevData,\n        lists: updatedLists\n      };\n    });\n  }, [selectedCard, setData]);\n  const handleUnassignLabel = useCallback(labelId => {\n    if (!selectedCard) return;\n\n    // Логика отвязки метки от выбранной карточки\n    setData(prevData => {\n      const updatedLists = prevData.lists.map(list => ({\n        ...list,\n        cards: list.cards.map(card => {\n          if (card.id === selectedCard.id) {\n            const newLabels = card.labels ? card.labels.filter(id => id !== labelId) : [];\n            return {\n              ...card,\n              labels: newLabels\n            };\n          }\n          return card;\n        })\n      }));\n      return {\n        ...prevData,\n        lists: updatedLists\n      };\n    });\n  }, [selectedCard, setData]);\n  const isLabelAssigned = useCallback(labelId => {\n    return selectedCard && selectedCard.labels && selectedCard.labels.includes(labelId);\n  }, [selectedCard]);\n  const handleDeleteLabel = useCallback(labelId => {\n    setData(prevData => ({\n      ...prevData,\n      labels: prevData.labels.filter(label => label.id !== labelId),\n      lists: prevData.lists.map(list => ({\n        ...list,\n        cards: list.cards.map(card => ({\n          ...card,\n          labels: card.labels ? card.labels.filter(id => id !== labelId) : []\n        }))\n      }))\n    }));\n  }, [setData]);\n  return /*#__PURE__*/_jsxDEV(LabelManagerContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u0423\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u043C\\u0435\\u0442\\u043A\\u0430\\u043C\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(LabelInput, {\n        type: \"text\",\n        placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043C\\u0435\\u0442\\u043A\\u0438\",\n        value: newLabelName,\n        onChange: e => setNewLabelName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"color\",\n        value: newLabelColor,\n        onChange: e => setNewLabelColor(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddLabelButton, {\n        onClick: handleAddLabel,\n        disabled: !selectedCard,\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043C\\u0435\\u0442\\u043A\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LabelList, {\n      children: data.labels && data.labels.map(label => /*#__PURE__*/_jsxDEV(LabelItem, {\n        color: label.color,\n        onClick: () => {\n          isLabelAssigned(label.id) ? handleUnassignLabel(label.id) : handleAssignLabel(label.id);\n        },\n        assigned: isLabelAssigned(label.id),\n        disabled: !selectedCard,\n        children: [label.name, /*#__PURE__*/_jsxDEV(DeleteLabelButton, {\n          onClick: e => {\n            e.stopPropagation(); // Предотвращаем вызов handleAssignLabel\n            handleDeleteLabel(label.id);\n          },\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, label.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(LabelManager, \"eH1H+akaKqiyAn6eOoBo/fIJ+lk=\");\n_c = LabelManager;\nexport default LabelManager;\nvar _c;\n$RefreshReg$(_c, \"LabelManager\");","map":{"version":3,"names":["React","useState","useCallback","LabelManagerContainer","LabelList","LabelItem","AddLabelButton","LabelInput","DeleteLabelButton","styled","jsxDEV","_jsxDEV","LabelManager","data","setData","selectedCard","setSelectedCard","_s","newLabelName","setNewLabelName","newLabelColor","setNewLabelColor","handleAddLabel","newLabel","id","Math","random","toString","substring","name","color","prevData","labels","handleAssignLabel","labelId","updatedLists","lists","map","list","cards","card","newLabels","handleUnassignLabel","filter","isLabelAssigned","includes","handleDeleteLabel","label","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","assigned","stopPropagation","_c","$RefreshReg$"],"sources":["C:/Users/zulda/Desktop/5/src/components/LabelManager.js"],"sourcesContent":["// src/components/LabelManager.js\r\nimport React, { useState, useCallback } from 'react';\r\nimport { LabelManagerContainer, LabelList, LabelItem, AddLabelButton, LabelInput , DeleteLabelButton} from './LabelManager.styles';\r\nimport styled from 'styled-components';\r\n\r\n\r\n\r\nfunction LabelManager({ data, setData, selectedCard, setSelectedCard }) {\r\n  const [newLabelName, setNewLabelName] = useState('');\r\n  const [newLabelColor, setNewLabelColor] = useState('#ccc');\r\n\r\n  const handleAddLabel = useCallback(() => {\r\n    if (!selectedCard) return; // Проверяем, выбрана ли карточка\r\n\r\n    // Логика добавления новой метки в состояние data\r\n    const newLabel = {\r\n      id: Math.random().toString(36).substring(7), // Генерация случайного ID\r\n      name: newLabelName,\r\n      color: newLabelColor,\r\n    };\r\n\r\n    setData(prevData => ({\r\n      ...prevData,\r\n      labels: [...(prevData.labels || []), newLabel],\r\n    }));\r\n    setNewLabelName('');\r\n    setNewLabelColor('#ccc');\r\n  }, [newLabelName, newLabelColor, setData, selectedCard]); // Добавляем selectedCard в зависимости\r\n\r\n  const handleAssignLabel = useCallback((labelId) => {\r\n    if (!selectedCard) return;\r\n\r\n    // Логика привязки метки к выбранной карточке\r\n    setData(prevData => {\r\n      const updatedLists = prevData.lists.map(list => ({\r\n        ...list,\r\n        cards: list.cards.map(card => {\r\n          if (card.id === selectedCard.id) {\r\n            const newLabels = card.labels ? [...card.labels, labelId] : [labelId];\r\n            return { ...card, labels: newLabels };\r\n          }\r\n          return card;\r\n        }),\r\n      }));\r\n      return { ...prevData, lists: updatedLists };\r\n    });\r\n\r\n  }, [selectedCard, setData]);\r\n\r\n  const handleUnassignLabel = useCallback((labelId) => {\r\n    if (!selectedCard) return;\r\n\r\n    // Логика отвязки метки от выбранной карточки\r\n    setData(prevData => {\r\n      const updatedLists = prevData.lists.map(list => ({\r\n        ...list,\r\n        cards: list.cards.map(card => {\r\n          if (card.id === selectedCard.id) {\r\n            const newLabels = card.labels ? card.labels.filter(id => id !== labelId) : [];\r\n            return { ...card, labels: newLabels };\r\n          }\r\n          return card;\r\n        }),\r\n      }));\r\n      return { ...prevData, lists: updatedLists };\r\n    });\r\n  }, [selectedCard, setData]);\r\n\r\n  const isLabelAssigned = useCallback((labelId) => {\r\n    return selectedCard && selectedCard.labels && selectedCard.labels.includes(labelId);\r\n  }, [selectedCard]);\r\n\r\n  const handleDeleteLabel = useCallback((labelId) => {\r\n    setData(prevData => ({\r\n      ...prevData,\r\n      labels: prevData.labels.filter(label => label.id !== labelId),\r\n      lists: prevData.lists.map(list => ({\r\n        ...list,\r\n        cards: list.cards.map(card => ({\r\n          ...card,\r\n          labels: card.labels ? card.labels.filter(id => id !== labelId) : [],\r\n        })),\r\n      })),\r\n    }));\r\n  }, [setData]);\r\n\r\n  return (\r\n    <LabelManagerContainer>\r\n      <h3>Управление метками</h3>\r\n      <div>\r\n        <LabelInput\r\n          type=\"text\"\r\n          placeholder=\"Название метки\"\r\n          value={newLabelName}\r\n          onChange={(e) => setNewLabelName(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"color\"\r\n          value={newLabelColor}\r\n          onChange={(e) => setNewLabelColor(e.target.value)}\r\n        />\r\n        <AddLabelButton onClick={handleAddLabel} disabled={!selectedCard}>Добавить метку</AddLabelButton>\r\n      </div>\r\n      <LabelList>\r\n        {data.labels && data.labels.map((label) => (\r\n          <LabelItem\r\n            key={label.id}\r\n            color={label.color}\r\n            onClick={() => {\r\n              isLabelAssigned(label.id) ? handleUnassignLabel(label.id) : handleAssignLabel(label.id)\r\n            }}\r\n            assigned={isLabelAssigned(label.id)}\r\n            disabled={!selectedCard}\r\n          >\r\n            {label.name}\r\n            <DeleteLabelButton onClick={(e) => {\r\n              e.stopPropagation(); // Предотвращаем вызов handleAssignLabel\r\n              handleDeleteLabel(label.id);\r\n            }}>\r\n              X\r\n            </DeleteLabelButton>\r\n          </LabelItem>\r\n        ))}\r\n      </LabelList>\r\n    </LabelManagerContainer>\r\n  );\r\n}\r\n\r\nexport default LabelManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
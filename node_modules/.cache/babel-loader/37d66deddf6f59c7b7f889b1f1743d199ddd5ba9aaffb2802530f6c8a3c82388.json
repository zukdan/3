{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zulda\\\\Desktop\\\\3\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useCallback } from 'react';\nimport Board from '../components/Board';\nimport styled from 'styled-components';\nimport { handleAddList, handleDeleteList, handleListTitleChange } from '../utils/listHandlers';\nimport { handleAddCard, handleDeleteCard, handleCardTextChange, handleCardDescriptionChange } from '../utils/cardHandlers';\nimport { handleDownloadBoard, handleLoadBoard, handleDeleteBoard } from '../utils/dataHandlers';\nimport { AppContainer, FileInput, ButtonContainer, LoadButton, CommonButton, BoardScrollContainer, TopSectionContainer } from './App.styles'; // Import styles\nimport LabelManager from '../components/LabelManager';\nimport { Routes, Route } from 'react-router-dom';\nimport LandingPage from '../components/LandingPage';\nimport MainApp from '../components/MainApp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState({\n    lists: [{\n      id: '1',\n      title: '1 семестр',\n      cards: [{\n        id: '1',\n        text: '1 предмет',\n        description: 'Описание'\n      }]\n    }, {\n      id: '2',\n      title: '2 семестр',\n      cards: [{\n        id: '2',\n        text: '1 предмет',\n        description: 'Описание '\n      }]\n    }, {\n      id: '3',\n      title: '3 семестр',\n      cards: [{\n        id: '3',\n        text: '1 предмет',\n        description: 'Описание '\n      }]\n    }, {\n      id: '4',\n      title: '4 семестр',\n      cards: [{\n        id: '4',\n        text: '1 предмет',\n        description: 'Описание'\n      }]\n    }, {\n      id: '5',\n      title: '5 семестр',\n      cards: [{\n        id: '5',\n        text: '1 предмет',\n        description: 'Описание'\n      }]\n    }, {\n      id: '6',\n      title: '6 семестр',\n      cards: [{\n        id: '6',\n        text: '1 предмет',\n        description: 'Описание'\n      }]\n    }, {\n      id: '7',\n      title: '7 семестр',\n      cards: [{\n        id: '7',\n        text: '1 предмет',\n        description: 'Описание'\n      }]\n    }, {\n      id: '8',\n      title: '8 семестр',\n      cards: [{\n        id: '8',\n        text: '1 предмет',\n        description: 'Описание'\n      }]\n    }],\n    labels: []\n  });\n  const [selectedCard, setSelectedCard] = useState(null);\n  const handleAddListClick = useCallback(() => {\n    handleAddList(data, setData);\n  }, [data, setData]);\n  const handleDeleteListClick = useCallback(listId => {\n    handleDeleteList(listId, data, setData);\n  }, [data, setData]);\n  const handleListTitleChangeClick = useCallback((listId, newTitle) => {\n    handleListTitleChange(listId, newTitle, data, setData);\n  }, [data, setData]);\n  const handleAddCardClick = useCallback(listId => {\n    handleAddCard(listId, data, setData);\n  }, [data, setData]);\n  const handleDeleteCardClick = useCallback((listId, cardId) => {\n    handleDeleteCard(listId, cardId, data, setData);\n  }, [data, setData]);\n  const handleCardTextChangeClick = useCallback((listId, cardId, newText) => {\n    handleCardTextChange(listId, cardId, newText, data, setData);\n  }, [data, setData]);\n  const handleCardDescriptionChangeClick = useCallback((listId, cardId, newDescription) => {\n    handleCardDescriptionChange(listId, cardId, newDescription, data, setData);\n  }, [data, setData]);\n  const handleDownloadBoardClick = () => {\n    handleDownloadBoard(data);\n  };\n  const handleLoadBoardChange = useCallback(event => {\n    handleLoadBoard(event, setData);\n  }, [setData]);\n  const handleDeleteBoardClick = () => {\n    handleDeleteBoard(setData);\n  };\n  const moveCard = useCallback((draggedCardId, sourceListId, targetCardId, targetListId, direction) => {\n    setData(prevData => {\n      const sourceList = prevData.lists.find(list => list.id === sourceListId);\n      const draggedCard = sourceList.cards.find(card => card.id === draggedCardId);\n      const cardIndex = sourceList.cards.findIndex(card => card.id === draggedCardId);\n\n      // Create a copy of the lists array\n      const newLists = prevData.lists.map(list => ({\n        ...list\n      }));\n\n      // Remove the card from its current position\n      if (sourceListId === targetListId || direction === 'up' || direction === 'down') {\n        // Перемещение внутри одного списка или вверх/вниз\n        const updatedCards = [...sourceList.cards];\n        updatedCards.splice(cardIndex, 1);\n        let newIndex;\n        if (direction === \"up\" || direction === \"down\") {\n          newIndex = direction === 'up' ? Math.max(0, cardIndex - 1) : Math.min(sourceList.cards.length, cardIndex + 1);\n          updatedCards.splice(newIndex, 0, draggedCard);\n        }\n        newLists.forEach(list => {\n          if (list.id === sourceListId) {\n            list.cards = updatedCards;\n          }\n        });\n      } else {\n        // Перемещение между разными списками\n        newLists.forEach(list => {\n          if (list.id === sourceListId) {\n            list.cards = list.cards.filter(card => card.id !== draggedCardId);\n          }\n        });\n        newLists.forEach(list => {\n          if (list.id === targetListId) {\n            list.cards = [...list.cards, draggedCard];\n          }\n        });\n      }\n      return {\n        ...prevData,\n        lists: newLists\n      };\n    });\n  }, [setData]);\n  const moveCardTop = useCallback((draggedCardId, sourceListId) => {\n    setData(prevData => {\n      const sourceList = prevData.lists.find(list => list.id === sourceListId);\n      const draggedCard = sourceList.cards.find(card => card.id === draggedCardId);\n      const cardIndex = sourceList.cards.findIndex(card => card.id === draggedCardId);\n      if (cardIndex <= 0) {\n        return prevData;\n      }\n      const updatedSourceList = {\n        ...sourceList,\n        cards: [...sourceList.cards.slice(0, cardIndex), ...sourceList.cards.slice(cardIndex + 1)]\n      };\n      const newIndex = 0;\n      const updatedTargetList = {\n        ...sourceList,\n        cards: [...sourceList.cards.slice(0, newIndex), draggedCard, ...sourceList.cards.slice(newIndex)]\n      };\n      return {\n        ...prevData,\n        lists: prevData.lists.map(list => {\n          if (list.id === sourceListId) {\n            return updatedTargetList;\n          } else {\n            return list;\n          }\n        })\n      };\n    });\n  }, [setData]);\n  const moveCardBottom = useCallback((draggedCardId, sourceListId) => {\n    setData(prevData => {\n      const sourceList = prevData.lists.find(list => list.id === sourceListId);\n      const draggedCard = sourceList.cards.find(card => card.id === draggedCardId);\n      const cardIndex = sourceList.cards.findIndex(card => card.id === draggedCardId);\n      if (cardIndex === sourceList.cards.length - 1) {\n        return prevData;\n      }\n      const updatedSourceList = {\n        ...sourceList,\n        cards: [...sourceList.cards.slice(0, cardIndex), ...sourceList.cards.slice(cardIndex + 1)]\n      };\n      const newIndex = sourceList.cards.length;\n      const updatedTargetList = {\n        ...sourceList,\n        cards: [...sourceList.cards.slice(0, newIndex), draggedCard, ...sourceList.cards.slice(newIndex)]\n      };\n      return {\n        ...prevData,\n        lists: prevData.lists.map(list => {\n          if (list.id === sourceListId) {\n            return updatedTargetList;\n          } else {\n            return list;\n          }\n        })\n      };\n    });\n  }, [setData]);\n  const handleUnassignLabel = useCallback((listId, cardId, labelId) => {\n    setData(prevData => {\n      const updatedLists = prevData.lists.map(list => ({\n        ...list,\n        cards: list.cards.map(card => {\n          if (card.id === cardId) {\n            const newLabels = card.labels ? card.labels.filter(id => id !== labelId) : [];\n            return {\n              ...card,\n              labels: newLabels\n            };\n          }\n          return card;\n        })\n      }));\n      return {\n        ...prevData,\n        lists: updatedLists\n      };\n    });\n  }, [setData]);\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: [/*#__PURE__*/_jsxDEV(TopSectionContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(LandingPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/app\",\n          element: /*#__PURE__*/_jsxDEV(MainApp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddListClick,\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0441\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CommonButton, {\n          onClick: handleDownloadBoardClick,\n          children: \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C \\u043A\\u0443\\u0440\\u0441\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(LoadButton, {\n          htmlFor: \"fileInput\",\n          children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u043A\\u0443\\u0440\\u0441\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FileInput, {\n          type: \"file\",\n          id: \"fileInput\",\n          accept: \".json\",\n          onChange: handleLoadBoardChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CommonButton, {\n          onClick: handleDeleteBoardClick,\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u043A\\u0443\\u0440\\u0441\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LabelManager, {\n        data: data,\n        setData: setData,\n        selectedCard: selectedCard,\n        setSelectedCard: setSelectedCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BoardScrollContainer, {\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        data: data,\n        setData: setData,\n        onCardTextChange: handleCardTextChangeClick,\n        onCardDescriptionChange: handleCardDescriptionChangeClick,\n        onAddCard: handleAddCardClick,\n        onListTitleChange: handleListTitleChangeClick,\n        onDeleteList: handleDeleteListClick,\n        onDeleteCard: handleDeleteCardClick,\n        setSelectedCard: setSelectedCard,\n        moveCard: moveCard // Pass moveCard to Board\n        ,\n        moveCardTop: moveCardTop,\n        moveCardBottom: moveCardBottom,\n        onUnassignLabel: handleUnassignLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"v4SG6kaE0GiboXLoIaNw4Yftcl8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","Board","styled","handleAddList","handleDeleteList","handleListTitleChange","handleAddCard","handleDeleteCard","handleCardTextChange","handleCardDescriptionChange","handleDownloadBoard","handleLoadBoard","handleDeleteBoard","AppContainer","FileInput","ButtonContainer","LoadButton","CommonButton","BoardScrollContainer","TopSectionContainer","LabelManager","Routes","Route","LandingPage","MainApp","jsxDEV","_jsxDEV","App","_s","data","setData","lists","id","title","cards","text","description","labels","selectedCard","setSelectedCard","handleAddListClick","handleDeleteListClick","listId","handleListTitleChangeClick","newTitle","handleAddCardClick","handleDeleteCardClick","cardId","handleCardTextChangeClick","newText","handleCardDescriptionChangeClick","newDescription","handleDownloadBoardClick","handleLoadBoardChange","event","handleDeleteBoardClick","moveCard","draggedCardId","sourceListId","targetCardId","targetListId","direction","prevData","sourceList","find","list","draggedCard","card","cardIndex","findIndex","newLists","map","updatedCards","splice","newIndex","Math","max","min","length","forEach","filter","moveCardTop","updatedSourceList","slice","updatedTargetList","moveCardBottom","handleUnassignLabel","labelId","updatedLists","newLabels","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","onClick","htmlFor","type","accept","onChange","onCardTextChange","onCardDescriptionChange","onAddCard","onListTitleChange","onDeleteList","onDeleteCard","onUnassignLabel","_c","$RefreshReg$"],"sources":["C:/Users/zulda/Desktop/3/src/App.js"],"sourcesContent":["// src/App.js\r\nimport React, { useState, useCallback } from 'react';\r\nimport Board from '../components/Board';\r\nimport styled from 'styled-components';\r\nimport { handleAddList, handleDeleteList, handleListTitleChange } from '../utils/listHandlers';\r\nimport { handleAddCard, handleDeleteCard, handleCardTextChange, handleCardDescriptionChange } from '../utils/cardHandlers';\r\nimport { handleDownloadBoard, handleLoadBoard, handleDeleteBoard } from '../utils/dataHandlers';\r\nimport { AppContainer, FileInput, ButtonContainer, LoadButton, CommonButton, BoardScrollContainer , TopSectionContainer} from './App.styles'; // Import styles\r\nimport LabelManager from '../components/LabelManager';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport LandingPage from '../components/LandingPage';\r\nimport MainApp from '../components/MainApp';\r\n\r\n\r\nfunction App() {\r\n    const [data, setData] = useState({\r\n        lists: [\r\n            { id: '1', title: '1 семестр', cards: [{ id: '1', text: '1 предмет', description: 'Описание' }] },\r\n            { id: '2', title: '2 семестр', cards: [{ id: '2', text: '1 предмет', description: 'Описание ' }] },\r\n            { id: '3', title: '3 семестр', cards: [{ id: '3', text: '1 предмет', description: 'Описание ' },] },\r\n            { id: '4', title: '4 семестр', cards: [{ id: '4', text: '1 предмет', description: 'Описание' },] },\r\n            { id: '5', title: '5 семестр', cards: [{ id: '5', text: '1 предмет', description: 'Описание' },] },\r\n            { id: '6', title: '6 семестр', cards: [{ id: '6', text: '1 предмет', description: 'Описание' },] },\r\n            { id: '7', title: '7 семестр', cards: [{ id: '7', text: '1 предмет', description: 'Описание' },] },\r\n            { id: '8', title: '8 семестр', cards: [{ id: '8', text: '1 предмет', description: 'Описание' },] },\r\n        ],\r\n        labels: [],\r\n    });\r\n\r\n    const [selectedCard, setSelectedCard] = useState(null);\r\n\r\n    const handleAddListClick = useCallback(() => {\r\n        handleAddList(data, setData);\r\n    }, [data, setData]);\r\n\r\n    const handleDeleteListClick = useCallback((listId) => {\r\n        handleDeleteList(listId, data, setData);\r\n    }, [data, setData]);\r\n\r\n    const handleListTitleChangeClick = useCallback((listId, newTitle) => {\r\n        handleListTitleChange(listId, newTitle, data, setData);\r\n    }, [data, setData]);\r\n\r\n    const handleAddCardClick = useCallback((listId) => {\r\n        handleAddCard(listId, data, setData);\r\n    }, [data, setData]);\r\n\r\n    const handleDeleteCardClick = useCallback((listId, cardId) => {\r\n        handleDeleteCard(listId, cardId, data, setData);\r\n    }, [data, setData]);\r\n\r\n    const handleCardTextChangeClick = useCallback((listId, cardId, newText) => {\r\n        handleCardTextChange(listId, cardId, newText, data, setData);\r\n    }, [data, setData]);\r\n\r\n    const handleCardDescriptionChangeClick = useCallback((listId, cardId, newDescription) => {\r\n        handleCardDescriptionChange(listId, cardId, newDescription, data, setData);\r\n    }, [data, setData]);\r\n\r\n    const handleDownloadBoardClick = () => {\r\n        handleDownloadBoard(data);\r\n    };\r\n\r\n    const handleLoadBoardChange = useCallback((event) => {\r\n        handleLoadBoard(event, setData);\r\n    }, [setData]);\r\n\r\n    const handleDeleteBoardClick = () => {\r\n        handleDeleteBoard(setData);\r\n    };\r\n const moveCard = useCallback((draggedCardId, sourceListId, targetCardId, targetListId, direction) => {\r\n        setData(prevData => {\r\n            const sourceList = prevData.lists.find(list => list.id === sourceListId);\r\n            const draggedCard = sourceList.cards.find(card => card.id === draggedCardId);\r\n            const cardIndex = sourceList.cards.findIndex(card => card.id === draggedCardId);\r\n\r\n            // Create a copy of the lists array\r\n            const newLists = prevData.lists.map(list => ({ ...list }));\r\n\r\n            // Remove the card from its current position\r\n            if (sourceListId === targetListId || (direction === 'up' || direction === 'down')) {\r\n               // Перемещение внутри одного списка или вверх/вниз\r\n                const updatedCards = [...sourceList.cards];\r\n                updatedCards.splice(cardIndex, 1);\r\n                let newIndex;\r\n                if (direction === \"up\" || direction === \"down\") {\r\n                    newIndex = (direction === 'up') ? Math.max(0, cardIndex - 1) : Math.min(sourceList.cards.length, cardIndex + 1);\r\n                    updatedCards.splice(newIndex, 0, draggedCard);\r\n                }\r\n                newLists.forEach(list => {\r\n                    if (list.id === sourceListId) {\r\n                         list.cards = updatedCards;\r\n                    }\r\n                });\r\n\r\n            } else {\r\n                 // Перемещение между разными списками\r\n                  newLists.forEach(list => {\r\n                    if (list.id === sourceListId) {\r\n                         list.cards = list.cards.filter(card => card.id !== draggedCardId);\r\n                    }\r\n                });\r\n                newLists.forEach(list => {\r\n                    if (list.id === targetListId) {\r\n                         list.cards = [...list.cards, draggedCard];\r\n                    }\r\n                });\r\n            }\r\n              \r\n            return {\r\n                ...prevData,\r\n                lists: newLists\r\n            };\r\n        });\r\n    }, [setData]);\r\n\r\n    const moveCardTop = useCallback((draggedCardId, sourceListId) => {\r\n        setData(prevData => {\r\n            const sourceList = prevData.lists.find(list => list.id === sourceListId);\r\n            const draggedCard = sourceList.cards.find(card => card.id === draggedCardId);\r\n\r\n            const cardIndex = sourceList.cards.findIndex(card => card.id === draggedCardId);\r\n\r\n            if (cardIndex <= 0) {\r\n                return prevData;\r\n            }\r\n\r\n            const updatedSourceList = {\r\n                ...sourceList,\r\n                cards: [...sourceList.cards.slice(0, cardIndex), ...sourceList.cards.slice(cardIndex + 1)]\r\n            };\r\n\r\n            const newIndex = 0\r\n            const updatedTargetList = {\r\n                ...sourceList,\r\n                cards: [\r\n                    ...sourceList.cards.slice(0, newIndex),\r\n                    draggedCard,\r\n                    ...sourceList.cards.slice(newIndex),\r\n                ],\r\n            };\r\n\r\n\r\n            return {\r\n                ...prevData,\r\n                lists: prevData.lists.map(list => {\r\n                    if (list.id === sourceListId) {\r\n                        return updatedTargetList;\r\n                    } else {\r\n                        return list;\r\n                    }\r\n                }),\r\n            };\r\n        });\r\n    }, [setData]);\r\n\r\n    const moveCardBottom = useCallback((draggedCardId, sourceListId) => {\r\n        setData(prevData => {\r\n            const sourceList = prevData.lists.find(list => list.id === sourceListId);\r\n            const draggedCard = sourceList.cards.find(card => card.id === draggedCardId);\r\n\r\n            const cardIndex = sourceList.cards.findIndex(card => card.id === draggedCardId);\r\n\r\n            if (cardIndex === sourceList.cards.length - 1) {\r\n                return prevData;\r\n            }\r\n\r\n            const updatedSourceList = {\r\n                ...sourceList,\r\n                cards: [...sourceList.cards.slice(0, cardIndex), ...sourceList.cards.slice(cardIndex + 1)]\r\n            };\r\n\r\n            const newIndex = sourceList.cards.length;\r\n            const updatedTargetList = {\r\n                ...sourceList,\r\n                cards: [\r\n                    ...sourceList.cards.slice(0, newIndex),\r\n                    draggedCard,\r\n                    ...sourceList.cards.slice(newIndex),\r\n                ],\r\n            };\r\n\r\n            return {\r\n                ...prevData,\r\n                lists: prevData.lists.map(list => {\r\n                    if (list.id === sourceListId) {\r\n                        return updatedTargetList;\r\n                    } else {\r\n                        return list;\r\n                    }\r\n                }),\r\n            };\r\n        });\r\n    }, [setData]);\r\n\r\n\r\n    const handleUnassignLabel = useCallback((listId, cardId, labelId) => {\r\n        setData(prevData => {\r\n            const updatedLists = prevData.lists.map(list => ({\r\n                ...list,\r\n                cards: list.cards.map(card => {\r\n                    if (card.id === cardId) {\r\n                        const newLabels = card.labels ? card.labels.filter(id => id !== labelId) : [];\r\n                        return { ...card, labels: newLabels };\r\n                    }\r\n                    return card;\r\n                }),\r\n            }));\r\n            return { ...prevData, lists: updatedLists };\r\n        });\r\n    }, [setData]);\r\n\r\n\r\n    return (\r\n        \r\n        <AppContainer>\r\n            <TopSectionContainer>  \r\n                <Routes>\r\n                    <Route path=\"/\" element={<LandingPage />} />\r\n                    <Route path=\"/app\" element={<MainApp />} />\r\n                </Routes>\r\n                <ButtonContainer>\r\n                    \r\n                    <button onClick={handleAddListClick}>Добавить семестр</button>\r\n                    <CommonButton onClick={handleDownloadBoardClick}>Скачать курс</CommonButton>\r\n                    <LoadButton htmlFor=\"fileInput\">Загрузить курс</LoadButton>\r\n                    <FileInput\r\n                        type=\"file\"\r\n                        id=\"fileInput\"\r\n                        accept=\".json\"\r\n                        onChange={handleLoadBoardChange}\r\n                    />\r\n                    <CommonButton onClick={handleDeleteBoardClick}>Удалить курс</CommonButton>\r\n                </ButtonContainer>\r\n                <LabelManager\r\n                    data={data}\r\n                    setData={setData}\r\n                    selectedCard={selectedCard}\r\n                    setSelectedCard={setSelectedCard}\r\n                />\r\n            </TopSectionContainer>\r\n            <BoardScrollContainer>\r\n                <Board\r\n                    data={data}\r\n                    setData={setData}\r\n                    onCardTextChange={handleCardTextChangeClick}\r\n                    onCardDescriptionChange={handleCardDescriptionChangeClick}\r\n                    onAddCard={handleAddCardClick}\r\n                    onListTitleChange={handleListTitleChangeClick}\r\n                    onDeleteList={handleDeleteListClick}\r\n                    onDeleteCard={handleDeleteCardClick}\r\n                    setSelectedCard={setSelectedCard}\r\n                    moveCard={moveCard} // Pass moveCard to Board\r\n                    moveCardTop={moveCardTop}\r\n                    moveCardBottom={moveCardBottom}\r\n                    onUnassignLabel={handleUnassignLabel}\r\n                />\r\n            </BoardScrollContainer>\r\n        </AppContainer>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
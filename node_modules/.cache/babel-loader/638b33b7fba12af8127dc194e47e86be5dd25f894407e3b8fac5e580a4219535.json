{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zulda\\\\Desktop\\\\1\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport Board from './components/Board';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContainer = styled.div`\n  display: flex;\n  overflow-x: auto;\n  min-height: 100vh;\n  background-color: #f4f5f7;\n  padding: 20px;\n`;\n_c = AppContainer;\nfunction App() {\n  _s();\n  const [data, setData] = useState({\n    lists: [{\n      id: 'list1',\n      title: 'To Do',\n      cards: [{\n        id: 'card1',\n        text: 'Task 1',\n        description: 'Description 1'\n      }, {\n        id: 'card2',\n        text: 'Task 2',\n        description: 'Description 2'\n      }]\n    }, {\n      id: 'list2',\n      title: 'In Progress',\n      cards: [{\n        id: 'card3',\n        text: 'Task 3',\n        description: 'Description 3'\n      }]\n    }, {\n      id: 'list3',\n      title: 'Done',\n      cards: [{\n        id: 'card4',\n        text: 'Task 4',\n        description: 'Description 4'\n      }, {\n        id: 'card5',\n        text: 'Task 5',\n        description: 'Description 5'\n      }]\n    }]\n  });\n  const onDragEnd = result => {\n    const {\n      destination,\n      source,\n      draggableId,\n      type\n    } = result;\n    if (!destination) {\n      return;\n    }\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n    if (type === 'list') {\n      const newListOrder = Array.from(data.lists);\n      const [movedList] = newListOrder.splice(source.index, 1);\n      newListOrder.splice(destination.index, 0, movedList);\n      setData({\n        ...data,\n        lists: newListOrder\n      });\n      return;\n    }\n    const startList = data.lists.find(list => list.id === source.droppableId);\n    const finishList = data.lists.find(list => list.id === destination.droppableId);\n    if (startList === finishList) {\n      const newCards = Array.from(startList.cards);\n      const [movedCard] = newCards.splice(source.index, 1);\n      newCards.splice(destination.index, 0, movedCard);\n      const newList = {\n        ...startList,\n        cards: newCards\n      };\n      const newData = {\n        ...data,\n        lists: data.lists.map(list => list.id === newList.id ? newList : list)\n      };\n      setData(newData);\n      return;\n    }\n    const startCards = Array.from(startList.cards);\n    const [movedCard] = startCards.splice(source.index, 1);\n    const finishCards = Array.from(finishList.cards);\n    finishCards.splice(destination.index, 0, movedCard);\n    const newStartList = {\n      ...startList,\n      cards: startCards\n    };\n    const newFinishList = {\n      ...finishList,\n      cards: finishCards\n    };\n    const newData = {\n      ...data,\n      lists: data.lists.map(list => {\n        if (list.id === newStartList.id) {\n          return newStartList;\n        }\n        if (list.id === newFinishList.id) {\n          return newFinishList;\n        }\n        return list;\n      })\n    };\n    setData(newData);\n  };\n  const handleCardTextChange = useCallback((listId, cardId, newText) => {\n    const newData = {\n      ...data,\n      lists: data.lists.map(list => {\n        if (list.id === listId) {\n          return {\n            ...list,\n            cards: list.cards.map(card => {\n              if (card.id === cardId) {\n                return {\n                  ...card,\n                  text: newText\n                };\n              }\n              return card;\n            })\n          };\n        }\n        return list;\n      })\n    };\n    setData(newData);\n  }, [data, setData]);\n  const handleCardDescriptionChange = useCallback((listId, cardId, newDescription) => {\n    const newData = {\n      ...data,\n      lists: data.lists.map(list => {\n        if (list.id === listId) {\n          return {\n            ...list,\n            cards: list.cards.map(card => {\n              if (card.id === cardId) {\n                return {\n                  ...card,\n                  description: newDescription\n                };\n              }\n              return card;\n            })\n          };\n        }\n        return list;\n      })\n    };\n    setData(newData);\n  }, [data, setData]);\n  const handleDownloadBoard = () => {\n    const jsonData = JSON.stringify(data);\n    const blob = new Blob([jsonData], {\n      type: 'application/json'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'board.json';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n  const handleDeleteBoard = () => {\n    setData({\n      lists: []\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(AppContainer, {\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          data: data,\n          onCardTextChange: handleCardTextChange,\n          onCardDescriptionChange: handleCardDescriptionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDownloadBoard,\n      children: \"Download Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDeleteBoard,\n      children: \"Delete Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9r10Nwke3VU+Z5ZytFDHMdHqIHw=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useCallback","DragDropContext","Board","styled","jsxDEV","_jsxDEV","AppContainer","div","_c","App","_s","data","setData","lists","id","title","cards","text","description","onDragEnd","result","destination","source","draggableId","type","droppableId","index","newListOrder","Array","from","movedList","splice","startList","find","list","finishList","newCards","movedCard","newList","newData","map","startCards","finishCards","newStartList","newFinishList","handleCardTextChange","listId","cardId","newText","card","handleCardDescriptionChange","newDescription","handleDownloadBoard","jsonData","JSON","stringify","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","handleDeleteBoard","children","onCardTextChange","onCardDescriptionChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c2","$RefreshReg$"],"sources":["C:/Users/zulda/Desktop/1/src/App.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nimport Board from './components/Board';\r\nimport styled from 'styled-components';\r\n\r\nconst AppContainer = styled.div`\r\n  display: flex;\r\n  overflow-x: auto;\r\n  min-height: 100vh;\r\n  background-color: #f4f5f7;\r\n  padding: 20px;\r\n`;\r\n\r\nfunction App() {\r\n  const [data, setData] = useState({\r\n    lists: [\r\n      { id: 'list1', title: 'To Do', cards: [{ id: 'card1', text: 'Task 1', description: 'Description 1' }, { id: 'card2', text: 'Task 2', description: 'Description 2' }] },\r\n      { id: 'list2', title: 'In Progress', cards: [{ id: 'card3', text: 'Task 3', description: 'Description 3' }] },\r\n      { id: 'list3', title: 'Done', cards: [{ id: 'card4', text: 'Task 4', description: 'Description 4' }, { id: 'card5', text: 'Task 5', description: 'Description 5' }] },\r\n    ],\r\n  });\r\n\r\n  const onDragEnd = (result) => {\r\n    const { destination, source, draggableId, type } = result;\r\n\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\r\n      return;\r\n    }\r\n\r\n    if (type === 'list') {\r\n      const newListOrder = Array.from(data.lists);\r\n      const [movedList] = newListOrder.splice(source.index, 1);\r\n      newListOrder.splice(destination.index, 0, movedList);\r\n\r\n      setData({ ...data, lists: newListOrder });\r\n      return;\r\n    }\r\n\r\n    const startList = data.lists.find(list => list.id === source.droppableId);\r\n    const finishList = data.lists.find(list => list.id === destination.droppableId);\r\n\r\n    if (startList === finishList) {\r\n      const newCards = Array.from(startList.cards);\r\n      const [movedCard] = newCards.splice(source.index, 1);\r\n      newCards.splice(destination.index, 0, movedCard);\r\n\r\n      const newList = { ...startList, cards: newCards };\r\n      const newData = {\r\n        ...data,\r\n        lists: data.lists.map(list => list.id === newList.id ? newList : list),\r\n      };\r\n\r\n      setData(newData);\r\n      return;\r\n    }\r\n\r\n    const startCards = Array.from(startList.cards);\r\n    const [movedCard] = startCards.splice(source.index, 1);\r\n\r\n    const finishCards = Array.from(finishList.cards);\r\n    finishCards.splice(destination.index, 0, movedCard);\r\n\r\n    const newStartList = { ...startList, cards: startCards };\r\n    const newFinishList = { ...finishList, cards: finishCards };\r\n\r\n    const newData = {\r\n      ...data,\r\n      lists: data.lists.map(list => {\r\n        if (list.id === newStartList.id) {\r\n          return newStartList;\r\n        }\r\n        if (list.id === newFinishList.id) {\r\n          return newFinishList;\r\n        }\r\n        return list;\r\n      }),\r\n    };\r\n\r\n    setData(newData);\r\n  };\r\n\r\n  const handleCardTextChange = useCallback((listId, cardId, newText) => {\r\n    const newData = {\r\n      ...data,\r\n      lists: data.lists.map(list => {\r\n        if (list.id === listId) {\r\n          return {\r\n            ...list,\r\n            cards: list.cards.map(card => {\r\n              if (card.id === cardId) {\r\n                return { ...card, text: newText };\r\n              }\r\n              return card;\r\n            }),\r\n          };\r\n        }\r\n        return list;\r\n      }),\r\n    };\r\n    setData(newData);\r\n  }, [data, setData]);\r\n\r\n  const handleCardDescriptionChange = useCallback((listId, cardId, newDescription) => {\r\n    const newData = {\r\n      ...data,\r\n      lists: data.lists.map(list => {\r\n        if (list.id === listId) {\r\n          return {\r\n            ...list,\r\n            cards: list.cards.map(card => {\r\n              if (card.id === cardId) {\r\n                return { ...card, description: newDescription };\r\n              }\r\n              return card;\r\n            }),\r\n          };\r\n        }\r\n        return list;\r\n      }),\r\n    };\r\n    setData(newData);\r\n  }, [data, setData]);\r\n\r\n  const handleDownloadBoard = () => {\r\n    const jsonData = JSON.stringify(data);\r\n    const blob = new Blob([jsonData], { type: 'application/json' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = 'board.json';\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const handleDeleteBoard = () => {\r\n    setData({ lists: [] });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <AppContainer>\r\n          <Board data={data} onCardTextChange={handleCardTextChange} onCardDescriptionChange={handleCardDescriptionChange} />\r\n        </AppContainer>\r\n      </DragDropContext>\r\n      <button onClick={handleDownloadBoard}>Download Board</button>\r\n      <button onClick={handleDeleteBoard}>Delete Board</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}